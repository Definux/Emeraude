<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Definux.Emeraude.Admin.ClientBuilder.Models" #>
<#@ import namespace="Definux.Emeraude.Admin.ClientBuilder.Shared" #>
<#@ import namespace="Definux.Utilities.Extensions" #>
<#=ClientBuilderConstants.AutoGeneratedHeaderText #>

export default {
    state: {
<# foreach (var property in (List<PropertyDescription>)Session["Properties"]) {#>
        <#=property.Name.ToFirstLower()#>: <#=property.DefaultValue#>,
<#}#>
    },

    getters: {
<# foreach (var property in (List<PropertyDescription>)Session["Properties"]) {#>
        <#=property.Name.ToFirstLower()#>(state) {
            return state.<#=property.Name.ToFirstLower()#>;
        },
<#}#>
    },

    mutations: {
<# foreach (var property in (List<PropertyDescription>)Session["Properties"]) { if (!property.ReadOnly) {#>
        SET_<#=property.Name.SplitWordsByCapitalLetters().Replace(" ", "_").ToUpper()#>(state, value) {
            state.<#=property.Name.ToFirstLower()#> = value;
        },
<#}}#>
    },

    actions: {
        mapInitialState({ state, commit, rootState }) {
<# foreach (var property in (List<PropertyDescription>)Session["Properties"]) {#>
            state.<#=property.Name.ToFirstLower()#> = rootState.data.<#=property.Name.ToFirstLower()#>;
<#}#>
        },
<# foreach (var property in (List<PropertyDescription>)Session["Properties"]) { if (!property.ReadOnly) {#>
        update<#=property.Name#>(context, value) {
            context.commit('SET_<#=property.Name.SplitWordsByCapitalLetters().Replace(" ", "_").ToUpper()#>', value);
        },
<#}}#>
    }
};