<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Definux.Emeraude.Application</name>
    </assembly>
    <members>
        <member name="T:Definux.Emeraude.Application.Behaviours.RequestValidationBehavior`2">
            <summary>
            Pipeline behavior that handles the validation errors of the executed requests.
            </summary>
            <typeparam name="TRequest">Request.</typeparam>
            <typeparam name="TResponse">Response.</typeparam>
        </member>
        <member name="M:Definux.Emeraude.Application.Behaviours.RequestValidationBehavior`2.#ctor(System.Collections.Generic.IEnumerable{FluentValidation.IValidator{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Behaviours.RequestValidationBehavior`2"/> class.
            </summary>
            <param name="validators"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Behaviours.RequestValidationBehavior`2.Handle(`0,System.Threading.CancellationToken,MediatR.RequestHandlerDelegate{`1})">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Emails.EmailModel">
            <summary>
            Implementation of model that contains core information about the email instance.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Emails.EmailModel.Email">
            <summary>
            Receiver email.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Emails.EmailModel.Name">
            <summary>
            Receiver name.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Emails.EmailModel.Subject">
            <summary>
            Email subject.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Emails.IEmailSender">
            <summary>
            Service which gives methods for sending emails.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Emails.IEmailSender.SendEmailAsync(System.String,Definux.Emeraude.Application.Emails.EmailModel)">
            <summary>
            Method that send email by Razor template name and <see cref="T:Definux.Emeraude.Application.Emails.EmailModel"/>.
            </summary>
            <param name="templateName"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Emails.SendEmailResult">
            <summary>
            Result model used on sending email operation.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Emails.SendEmailResult.SuccessResult">
            <summary>
            Built result for success.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Emails.SendEmailResult.FailedResult">
            <summary>
            Built result for failure.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Emails.SendEmailResult.Success">
            <summary>
            Boolean status which set success or failure for the result.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.ConfirmedEmailEventArgs">
            <summary>
            Event arguments for confirmed email event handler.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.ExternalLoginEventArgs">
            <summary>
            Event arguments for external login event handler.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.ExternalRegisterEventArgs">
            <summary>
            Event arguments for external register event handler.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.ForgotPasswordEventArgs">
            <summary>
            Event arguments for forgot password event handler.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.EventHandlers.ForgotPasswordEventArgs.ResetPasswordLink">
            <summary>
            Reset password link.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.IConfirmedEmailEventHandler">
            <summary>
            Event handler that handle succeeded confirmed email request.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.IdentityEventArgs">
            <summary>
            Base class that implements the identity event arguments.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.EventHandlers.IdentityEventArgs.UserId">
            <summary>
            User id.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.EventHandlers.IdentityEventArgs.HttpContext">
            <inheritdoc cref="P:Definux.Emeraude.Application.EventHandlers.IdentityEventArgs.HttpContext"/>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.IExternalLoginEventHandler">
            <summary>
            Event handler that handle succeeded external login request.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.IExternalRegisterEventHandler">
            <summary>
            Event handler that handle succeeded external register request.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.IForgotPasswordEventHandler">
            <summary>
            Event handler that handle succeeded forgot password request.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.IIdentityEventHandler`1">
            <summary>
            Event handler that handle succeeded authentication request.
            </summary>
            <typeparam name="TIdentityEventArgs">Event args of the handler.</typeparam>
        </member>
        <member name="M:Definux.Emeraude.Application.EventHandlers.IIdentityEventHandler`1.HandleAsync(`0)">
            <summary>
            Method that handles succeeded identity request.
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.IIdentityEventManager">
            <summary>
            Event manager that trigger all identity related events on successfull execution of authentication operation.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.EventHandlers.IIdentityEventManager.TriggerLoginEventAsync(System.Guid)">
            <summary>
            Trigger <see cref="T:Definux.Emeraude.Application.EventHandlers.ILoginEventHandler"/>.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.EventHandlers.IIdentityEventManager.TriggerExternalLoginEventAsync(System.Guid)">
            <summary>
            Trigger <see cref="T:Definux.Emeraude.Application.EventHandlers.IExternalLoginEventHandler"/>.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.EventHandlers.IIdentityEventManager.TriggerRegisterEventAsync(System.Guid,System.String)">
            <summary>
            Trigger <see cref="T:Definux.Emeraude.Application.EventHandlers.IRegisterEventHandler"/>.
            </summary>
            <param name="userId"></param>
            <param name="confirmationLink"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.EventHandlers.IIdentityEventManager.TriggerExternalRegisterEventAsync(System.Guid)">
            <summary>
            Trigger <see cref="T:Definux.Emeraude.Application.EventHandlers.IExternalRegisterEventHandler"/>.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.EventHandlers.IIdentityEventManager.TriggerForgotPasswordEventAsync(System.Guid,System.String)">
            <summary>
            Trigger <see cref="T:Definux.Emeraude.Application.EventHandlers.IForgotPasswordEventHandler"/>.
            </summary>
            <param name="userId"></param>
            <param name="resetPasswordLink"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.EventHandlers.IIdentityEventManager.TriggerResetPasswordEventAsync(System.Guid)">
            <summary>
            Trigger <see cref="T:Definux.Emeraude.Application.EventHandlers.IResetPasswordEventHandler"/>.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.EventHandlers.IIdentityEventManager.TriggerConfirmedEmailEventAsync(System.Guid)">
            <summary>
            Trigger <see cref="T:Definux.Emeraude.Application.EventHandlers.IConfirmedEmailEventHandler"/>.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.EventHandlers.IIdentityEventManager.TriggerRequestChangeEmailEventAsync(System.Guid,System.String,System.String)">
            <summary>
            Trigger <see cref="T:Definux.Emeraude.Application.EventHandlers.IRequestChangeEmailEventHandler"/>.
            </summary>
            <param name="userId"></param>
            <param name="newEmail"></param>
            <param name="changeEmailConfirmationLink"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.ILoginEventHandler">
            <summary>
            Event handler that handle succeeded login request.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.IRegisterEventHandler">
            <summary>
            Event handler that handle succeeded register request.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.IRequestChangeEmailEventHandler">
            <summary>
            Event handler that handle request for change user email.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.IResetPasswordEventHandler">
            <summary>
            Event handler that handle succeeded reset password request.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.LoginEventArgs">
            <summary>
            Event arguments for login event handler.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.RegisterEventArgs">
            <summary>
            Event arguments for register event handler.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.EventHandlers.RegisterEventArgs.EmailConfirmationLink">
            <summary>
            Email confirmation link.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.RequestChangeEmailEventArgs">
            <summary>
            Event arguments for request change email event handler.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.EventHandlers.RequestChangeEmailEventArgs.EmailConfirmationLink">
            <summary>
            Email confirmation link.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.EventHandlers.RequestChangeEmailEventArgs.NewEmail">
            <summary>
            Requested new email.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.EventHandlers.ResetPasswordEventArgs">
            <summary>
            Event arguments for reset password event handler.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Exceptions.DevelopmentOnlyException">
            <summary>
            Custom exception design for protection of actions and resources which must be unavailable outside of development environment.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Exceptions.DevelopmentOnlyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Exceptions.DevelopmentOnlyException"/> class.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Exceptions.DevelopmentOnlyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Exceptions.DevelopmentOnlyException"/> class.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Exceptions.EntityNotFoundException">
            <summary>
            Custom exception design for requests that access entity that not exist or not available.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Exceptions.EntityNotFoundException.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Exceptions.EntityNotFoundException"/> class.
            </summary>
            <param name="entity"></param>
            <param name="identifier"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Exceptions.EntityNotFoundException.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Exceptions.EntityNotFoundException"/> class.
            </summary>
            <param name="entity"></param>
            <param name="identifier"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Exceptions.EntityNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Exceptions.EntityNotFoundException"/> class.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Exceptions.PageNotFoundException">
            <summary>
            Exception for showing the lack of accessed entity.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Exceptions.PageNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Exceptions.PageNotFoundException"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Exceptions.ValidationException">
            <summary>
            Custom exception thrown on invalid fluent validation.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Exceptions.ValidationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Exceptions.ValidationException"/> class.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Exceptions.ValidationException.#ctor(System.Collections.Generic.IEnumerable{FluentValidation.Results.ValidationFailure})">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Exceptions.ValidationException"/> class.
            </summary>
            <param name="failures"></param>
        </member>
        <member name="P:Definux.Emeraude.Application.Exceptions.ValidationException.Failures">
            <summary>
            Dictionary with all failures of fluent validation.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Files.FileSystemItemType">
            <summary>
            Types of file system items.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Application.Files.FileSystemItemType.File">
            <summary>
            File.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Application.Files.FileSystemItemType.Folder">
            <summary>
            Folder.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Files.IFilesValidationProvider">
            <summary>
            Provider service of file validators.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.IFilesValidationProvider.ValidateFormFile(Microsoft.AspNetCore.Http.IFormFile,System.Collections.Generic.List{Definux.Utilities.Enumerations.FileExtensions},System.Collections.Generic.List{System.String},System.Int64)">
            <summary>
            Validate file by default or custom criteria.
            </summary>
            <param name="formFile"></param>
            <param name="customFileExtensions"></param>
            <param name="customMimeTypes"></param>
            <param name="customMaxFileSize"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.IFilesValidationProvider.ValidateFormImageFile(Microsoft.AspNetCore.Http.IFormFile,System.Collections.Generic.List{Definux.Utilities.Enumerations.FileExtensions},System.Collections.Generic.List{System.String},System.Int64)">
            <summary>
            Validate image by default or custom criteria.
            </summary>
            <param name="formFile"></param>
            <param name="customFileExtensions"></param>
            <param name="customMimeTypes"></param>
            <param name="customMaxFileSize"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.IFilesValidationProvider.ValidateFormVideoFile(Microsoft.AspNetCore.Http.IFormFile,System.Collections.Generic.List{Definux.Utilities.Enumerations.FileExtensions},System.Collections.Generic.List{System.String},System.Int64)">
            <summary>
            Validate video by default or custom criteria.
            </summary>
            <param name="formFile"></param>
            <param name="customFileExtensions"></param>
            <param name="customMimeTypes"></param>
            <param name="customMaxFileSize"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Files.IFoldersInitializer">
            <summary>
            Service that manages the project structure folders of the application.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.IFoldersInitializer.InitFoldersAsync">
            <summary>
            Creates all folders that don't exist in the application.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Files.InitFolder">
            <summary>
            Class that represent the folder that must be initialized on the start of the application.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.InitFolder.Name">
            <summary>
            Name of the folder.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.InitFolder.Children">
            <summary>
            List of all children folders that are placed in the current folder.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Files.IRootsService">
            <summary>
            Service that builds paths for roots.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.IRootsService.PublicRootDirectory">
            <summary>
            Get public root directory.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.IRootsService.PrivateRootDirectory">
            <summary>
            Get private root directory.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.IRootsService.GetPathFromPublicRoot(System.String[])">
            <summary>
            Get path from public root by path.
            </summary>
            <param name="paths"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.IRootsService.GetPathFromPrivateRoot(System.String[])">
            <summary>
            Get path from private root by path.
            </summary>
            <param name="paths"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Files.ISystemFilesService">
            <summary>
            System files service that access and process files and folders from the public and private root of the system.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.GetPublicRootFolderFilesRelativePaths(System.String[])">
            <summary>
            Get public root files with its relative paths from a path.
            </summary>
            <param name="paths"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.ScanDirectory(System.String,System.String)">
            <summary>
            Scan directory (public or private roots) for system items.
            </summary>
            <param name="directory"></param>
            <param name="baseDirectory">Must be <see cref="P:Definux.Emeraude.Application.Files.IRootsService.PublicRootDirectory"/> or <see cref="P:Definux.Emeraude.Application.Files.IRootsService.PrivateRootDirectory"/>.</param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.ScanPublicDirectory">
            <summary>
            Scan public root directory for system items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.ScanPrivateDirectory">
            <summary>
            Scan private root directory for system items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.GetFileAsync(System.String)">
            <summary>
            Get system file by file bath.
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.GetFileByIdAsync(System.Int32)">
            <summary>
            Get file (<see cref="T:Definux.Emeraude.Domain.Logging.TempFileLog"/>) by temp file log id (async execution).
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.GetFileById(System.Int32)">
            <summary>
            Get file (<see cref="T:Definux.Emeraude.Domain.Logging.TempFileLog"/>) by temp file log id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.GetFilesByIds(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Get files (<see cref="T:Definux.Emeraude.Domain.Logging.TempFileLog"/>) by temp file log ids.
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.GetFilesByIdsAsync(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Get files (<see cref="T:Definux.Emeraude.Domain.Logging.TempFileLog"/>) by temp file log ids (async execution).
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.ApplyTempFileToPrivateDirectoryAsync(System.Int32,System.String)">
            <summary>
            Apply temp file (<see cref="T:Definux.Emeraude.Domain.Logging.TempFileLog"/>) into specified private root directory (async execution).
            </summary>
            <param name="fileId"></param>
            <param name="targetDirectory"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.ApplyTempFileToPublicDirectoryAsync(System.Int32,System.String)">
            <summary>
            Apply temp file (<see cref="T:Definux.Emeraude.Domain.Logging.TempFileLog"/>) into specified public root directory (async execution).
            </summary>
            <param name="fileId"></param>
            <param name="targetDirectory"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.ApplyTempFilesToPrivateDirectoryAsync(System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
            Apply temp files (<see cref="T:Definux.Emeraude.Domain.Logging.TempFileLog"/>) into specified private root directory (async execution).
            </summary>
            <param name="ids"></param>
            <param name="targetDirectory"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.ApplyTempFilesToPublicDirectoryAsync(System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
            Apply temp files (<see cref="T:Definux.Emeraude.Domain.Logging.TempFileLog"/>) into specified public root directory (async execution).
            </summary>
            <param name="ids"></param>
            <param name="targetDirectory"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.ISystemFilesService.CreateFolderAsync(System.String,System.String)">
            <summary>
            Create folder.
            </summary>
            <param name="folderName"></param>
            <param name="folderPath"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Files.IUploadService">
            <summary>
            Service that supports upload functionality of the files infrastructure.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.IUploadService.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload file as a temp file in private root.
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Files.IUploadService.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String,System.Boolean)">
            <summary>
            Upload file in specified directory.
            </summary>
            <param name="formFile"></param>
            <param name="saveDirectory"></param>
            <param name="publicRoot"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Files.SystemFileResult">
            <summary>
            Result of the file for reading purposes.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.SystemFileResult.Stream">
            <summary>
            File stream of the file.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.SystemFileResult.ContentType">
            <summary>
            Content type of the file.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Files.SystemItem">
            <summary>
            Encapsulated definition of system item.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.SystemItem.Name">
            <summary>
            Name of the item.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.SystemItem.Type">
            <summary>
            Type of the item.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.SystemItem.Path">
            <summary>
            Path of the item.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.SystemItem.RelativePath">
            <summary>
            Relative path of the item.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.SystemItem.FileSize">
            <summary>
            File size of the item.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.SystemItem.CreatedOn">
            <summary>
            Creation date of the item.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Files.SystemItem.LastModifiedOn">
            <summary>
            Last modification date of the item.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Identity.BearerAuthenticationResult">
            <summary>
            Bearer authentication result for API authentication request.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Identity.BearerAuthenticationResult.FailedResult">
            <summary>
            Static property that returns failed bearer result.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Identity.BearerAuthenticationResult.Success">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Identity.BearerAuthenticationResult.Message">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Identity.BearerAuthenticationResult.JsonWebToken">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Identity.BearerAuthenticationResult.RefreshToken">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.BearerAuthenticationResult.SuccessResult(System.String,System.String)">
            <summary>
            Static method that returns success bearer result.
            </summary>
            <param name="jsonWebToken"></param>
            <param name="refreshToken"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Identity.ICurrentUserProvider">
            <summary>
            Helper accessor service that provides the identity user for the current request.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Identity.ICurrentUserProvider.CurrentUserId">
            <summary>
            Current user id.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.ICurrentUserProvider.GetCurrentUserAsync">
            <summary>
            Returns current request user.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Identity.IRoleManager">
            <summary>
            Emeraude role manager service.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IRoleManager.CreateRoleAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Create role entity by name and claims.
            </summary>
            <param name="roleName"></param>
            <param name="claims"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IRoleManager.DeleteRoleAsync(System.String)">
            <summary>
            Delete role entity.
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IRoleManager.GetRolesAsync">
            <summary>
            Get all roles as a dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IRoleManager.GetUserRolesAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <summary>
            Get all roles for a user as a dictionary.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IRoleManager.UnassignAllRolesFromUserAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <summary>
            Unassign all roles from a user.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IRoleManager.AssignRolesToUserAsync(Definux.Emeraude.Domain.Entities.IUser,System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Assign specified roles to a user.
            </summary>
            <param name="user"></param>
            <param name="roleIds"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Identity.ITwoFactorAuthenticationService">
            <summary>
            Two factor authentication service that provides specific methods for managing this functionality into the system.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.ITwoFactorAuthenticationService.GetFormattedKeyAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <summary>
            Get formatted authentication key for specific user.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.ITwoFactorAuthenticationService.GenerateQrCodeUriAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <summary>
            Generate QR code URL for specific user.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.ITwoFactorAuthenticationService.IsTwoFactorEnabled(Definux.Emeraude.Domain.Entities.IUser)">
            <summary>
            Check whether a user is enabled two factor authentication.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Identity.IUserAvatarService">
            <summary>
            Service specified for user avatar processing.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserAvatarService.ApplyAvatarToUserAsync(System.Guid,System.String)">
            <summary>
            Apply local saved avatar to specified user.
            </summary>
            <param name="userId"></param>
            <param name="avatarUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserAvatarService.CreateAvatarFromUrlAsync(System.String)">
            <summary>
            Create avatar for a user from external file source.
            </summary>
            <param name="externalSourceAvatarUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserAvatarService.CreateUserAvatarAsync(System.Byte[])">
            <summary>
            Create avatar for a user from file in byte array format.
            </summary>
            <param name="avatarFileByteArray"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserAvatarService.GetUserAvatarRelativePath(Definux.Emeraude.Domain.Entities.IUser)">
            <summary>
            Get user avatar relative path.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Identity.IUserClaimsService">
            <summary>
            Service for accessing and mutation of user claims.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserClaimsService.CheckUserForAccessAdministrationPermissionAsync(System.String)">
            <summary>
            Function that returns true or false based on the user rights to access administration panel.
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserClaimsService.GetUserClaimsForCookieAsync(System.Guid)">
            <summary>
            Get user claims which can be applied into the session cookie.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserClaimsService.GetUserClaimsForJwtTokenAsync(System.Guid)">
            <summary>
            Get user claims which can be applied into the JSON web token.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserClaimsService.GetAllUserClaimsAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <summary>
            Gets all user claims.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Identity.IUserManager">
            <summary>
            Emeraude wrapper of ASP.NET Core User Manager with additional functionalities.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Identity.IUserManager.Options">
            <inheritdoc cref="P:Microsoft.AspNetCore.Identity.UserManager`1.Options"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.ChangeUserNameAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <summary>
            Changes the specified user name.
            </summary>
            <param name="user"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.IsLockedOutAsync(System.String)">
            <summary>
            Returns a flag that indicating whether the specified user is locked out or not.
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.CheckPasswordAsync(System.String,System.String)">
            <summary>
            Returns a flag indicating whether the given password is valid for the specified email.
            </summary>
            <param name="email"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.IsEmailConfirmedAsync(System.String)">
            <summary>
            Gets a flag indicating whether the email address for the specified email has been verified, true if the email address is verified otherwise false.
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.CreateUserObject(System.String,System.String,System.Boolean)">
            <summary>
            Create user object by email and name.
            </summary>
            <param name="email"></param>
            <param name="name"></param>
            <param name="confirmedEmail"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetTwoFactorAuthenticationUserAsync">
            <summary>
            Extract two factor authenticated user from request context.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.AccessFailedAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.AccessFailedAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.AddClaimAsync(Definux.Emeraude.Domain.Entities.IUser,System.Security.Claims.Claim)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.AddClaimAsync(`0,System.Security.Claims.Claim)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.AddClaimsAsync(Definux.Emeraude.Domain.Entities.IUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.AddLoginAsync(Definux.Emeraude.Domain.Entities.IUser,Microsoft.AspNetCore.Identity.UserLoginInfo)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.AddPasswordAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.AddPasswordAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.AddToRoleAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.AddToRoleAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.AddToRolesAsync(Definux.Emeraude.Domain.Entities.IUser,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.AddToRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.ChangeEmailAsync(Definux.Emeraude.Domain.Entities.IUser,System.String,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.ChangeEmailAsync(`0,System.String,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.ChangePasswordAsync(Definux.Emeraude.Domain.Entities.IUser,System.String,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.ChangePasswordAsync(`0,System.String,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.ChangePhoneNumberAsync(Definux.Emeraude.Domain.Entities.IUser,System.String,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.ChangePhoneNumberAsync(`0,System.String,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.CheckPasswordAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.CheckPasswordAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.ConfirmEmailAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.ConfirmEmailAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.CountRecoveryCodesAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.CountRecoveryCodesAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.CreateAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.CreateAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.CreateAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.CreateSecurityTokenAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.CreateSecurityTokenAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.DeleteAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.DeleteAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.FindUserByEmailAsync(System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.FindUserByIdAsync(System.Guid)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.FindByIdAsync(System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.FindUserByLoginAsync(System.String,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.FindByLoginAsync(System.String,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.FindUserByNameAsync(System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.FindByNameAsync(System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GenerateChangeEmailTokenAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangeEmailTokenAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GenerateChangePhoneNumberTokenAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateChangePhoneNumberTokenAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GenerateConcurrencyStampAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateConcurrencyStampAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GenerateEmailConfirmationTokenAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateEmailConfirmationTokenAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GenerateNewTwoFactorRecoveryCodesAsync(Definux.Emeraude.Domain.Entities.IUser,System.Int32)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateNewTwoFactorRecoveryCodesAsync(`0,System.Int32)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GeneratePasswordResetTokenAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GenerateTwoFactorTokenAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateTwoFactorTokenAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GenerateUserTokenAsync(Definux.Emeraude.Domain.Entities.IUser,System.String,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(`0,System.String,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetAccessFailedCountAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetAccessFailedCountAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetAuthenticationTokenAsync(Definux.Emeraude.Domain.Entities.IUser,System.String,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticationTokenAsync(`0,System.String,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetAuthenticatorKeyAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetAuthenticatorKeyAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetClaimsAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetClaimsAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetEmailAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetEmailAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetLockoutEnabledAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEnabledAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetLockoutEndDateAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetLockoutEndDateAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetLoginsAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetLoginsAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetPhoneNumberAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetPhoneNumberAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetRolesAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetRolesAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetSecurityStampAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetTwoFactorEnabledAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetTwoFactorEnabledAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetUserIdAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetUserIdAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.GetValidTwoFactorProvidersAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.GetValidTwoFactorProvidersAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.HasPasswordAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.HasPasswordAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.IsEmailConfirmedAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.IsEmailConfirmedAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.IsInRoleAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.IsInRoleAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.IsLockedOutAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.IsLockedOutAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.IsPhoneNumberConfirmedAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.IsPhoneNumberConfirmedAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.RedeemTwoFactorRecoveryCodeAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.RedeemTwoFactorRecoveryCodeAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{Definux.Emeraude.Domain.Entities.IUser})">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.RegisterTokenProvider(System.String,Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider{`0})"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.RemoveAuthenticationTokenAsync(Definux.Emeraude.Domain.Entities.IUser,System.String,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveAuthenticationTokenAsync(`0,System.String,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.RemoveClaimAsync(Definux.Emeraude.Domain.Entities.IUser,System.Security.Claims.Claim)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimAsync(`0,System.Security.Claims.Claim)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.RemoveClaimsAsync(Definux.Emeraude.Domain.Entities.IUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.RemoveFromRoleAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRoleAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.RemoveFromRolesAsync(Definux.Emeraude.Domain.Entities.IUser,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveFromRolesAsync(`0,System.Collections.Generic.IEnumerable{System.String})"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.RemoveLoginAsync(Definux.Emeraude.Domain.Entities.IUser,System.String,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.RemoveLoginAsync(`0,System.String,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.RemovePasswordAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.RemovePasswordAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.ReplaceClaimAsync(Definux.Emeraude.Domain.Entities.IUser,System.Security.Claims.Claim,System.Security.Claims.Claim)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.ResetAccessFailedCountAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.ResetAccessFailedCountAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.ResetAuthenticatorKeyAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.ResetAuthenticatorKeyAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.ResetPasswordAsync(Definux.Emeraude.Domain.Entities.IUser,System.String,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.ResetPasswordAsync(`0,System.String,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.SetAuthenticationTokenAsync(Definux.Emeraude.Domain.Entities.IUser,System.String,System.String,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.SetAuthenticationTokenAsync(`0,System.String,System.String,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.SetEmailAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.SetEmailAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.SetLockoutEnabledAsync(Definux.Emeraude.Domain.Entities.IUser,System.Boolean)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEnabledAsync(`0,System.Boolean)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.SetLockoutEndDateAsync(Definux.Emeraude.Domain.Entities.IUser,System.Nullable{System.DateTimeOffset})">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset})"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.SetPhoneNumberAsync(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.SetPhoneNumberAsync(`0,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.SetTwoFactorEnabledAsync(Definux.Emeraude.Domain.Entities.IUser,System.Boolean)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.SetTwoFactorEnabledAsync(`0,System.Boolean)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.UpdateAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.UpdateSecurityStampAsync(Definux.Emeraude.Domain.Entities.IUser)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.UpdateSecurityStampAsync(`0)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.VerifyTwoFactorTokenAsync(Definux.Emeraude.Domain.Entities.IUser,System.String,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyTwoFactorTokenAsync(`0,System.String,System.String)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserManager.VerifyUserTokenAsync(Definux.Emeraude.Domain.Entities.IUser,System.String,System.String,System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Identity.UserManager`1.VerifyUserTokenAsync(`0,System.String,System.String,System.String)"/>
        </member>
        <member name="T:Definux.Emeraude.Application.Identity.IUserTokensService">
            <summary>
            Service that provides methods for generation of access and refresh tokens.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserTokensService.BuildJwtTokenForUserAsync(System.Guid)">
            <summary>
            Build JSON web token for specified user.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserTokensService.BuildJwtTokenForExternalUserAsync(Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.IExternalUser)">
            <summary>
            Build JSON web token for specified external user.
            </summary>
            <param name="externalUser"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserTokensService.RefreshJwtTokenAsync(System.Nullable{System.Guid},System.String)">
            <summary>
            Refresh JSON web token for specified user by refresh token.
            </summary>
            <param name="userId"></param>
            <param name="refreshToken"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Identity.IUserTokensService.ResetRefreshTokenAsync(System.Guid)">
            <summary>
            Reset refresh token for specified user.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Localization.ICurrentLanguageProvider">
            <summary>
            Helper service accessor that provides the language extracted from the current request.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.ICurrentLanguageProvider.GetCurrentLanguage">
            <summary>
            Returns current request language.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.ICurrentLanguageProvider.GetCurrentLanguageAsync">
            <summary>
            Returns current request language.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Localization.IEmLocalizer">
            <summary>
            Service that provide translation functionality by using current language based on the route.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.IEmLocalizer.TranslateKeyAsync(System.String,System.String)">
            <summary>
            Translate key by using the specified language (async execution).
            </summary>
            <param name="key"></param>
            <param name="languageCode"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.IEmLocalizer.TranslateKey(System.String,System.String)">
            <summary>
            Translate key by using the specified language.
            </summary>
            <param name="key"></param>
            <param name="languageCode"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.IEmLocalizer.GetStaticContentAsync(System.String,System.String)">
            <summary>
            Get static content by using the specified language (async execution).
            </summary>
            <param name="key"></param>
            <param name="languageCode"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.IEmLocalizer.GetStaticContent(System.String,System.String)">
            <summary>
            Get static content by using the specified language.
            </summary>
            <param name="key"></param>
            <param name="languageCode"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Localization.ILanguageStore">
            <summary>
            Storage for all localization data - languages, translations.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.ILanguageStore.GetAllLanguageCodesAsync">
            <summary>
            Get all available language codes (async execution).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.ILanguageStore.GetAllLanguageCodes">
            <summary>
            Get all available language codes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.ILanguageStore.GetDefaultLanguage">
            <summary>
            Get default language from the available ones.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.ILanguageStore.GetDefaultLanguageAsync">
            <summary>
            Get default language (async execution) from the available ones.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.ILanguageStore.GetLanguages">
            <summary>
            Get all available languages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.ILanguageStore.GetLanguagesAsync">
            <summary>
            Get all available languages (async execution).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.ILanguageStore.GetLanguageTranslationDictionary(System.Int32)">
            <summary>
            Get all translations for specific language in dictionary.
            </summary>
            <param name="languageId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Localization.ILanguageStore.GetTranslationsKeys">
            <summary>
            Get all translation keys.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Localization.ILocalizationContext">
            <summary>
            Database context for managing localization resources of the application.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Localization.ILocalizationContext.Languages">
            <summary>
            Application languages.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Localization.ILocalizationContext.Keys">
            <summary>
            Translation keys.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Localization.ILocalizationContext.Values">
            <summary>
            Translation values.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Localization.ILocalizationContext.ContentKeys">
            <summary>
            Static content keys.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Localization.ILocalizationContext.StaticContent">
            <summary>
            Static content items.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Logger.IEmLogger">
            <summary>
            Emeraude default logger.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Logger.IEmLogger.LogActivity(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,System.Boolean)">
            <summary>
            Register information about current request without saving.
            </summary>
            <param name="context"></param>
            <param name="hideParameters"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Logger.IEmLogger.LogEmailAsync(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Save information about sent/unsent email.
            </summary>
            <param name="emailAddress"></param>
            <param name="receiver"></param>
            <param name="subject"></param>
            <param name="body"></param>
            <param name="sent"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Logger.ILoggerContext">
            <summary>
            Context that contains all logs saved from the system.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Logger.ILoggerContext.ActivityLogs">
            <summary>
            Logs of all requests and user actions.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Logger.ILoggerContext.ErrorLogs">
            <summary>
            Logs of all errors and exceptions.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Logger.ILoggerContext.TempFileLogs">
            <summary>
            Logs of all uploaded files.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Logger.ILoggerContext.EmailLogs">
            <summary>
            Logs of all sent and unsent emails.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Mapping.ApplicationMappingProfile">
            <summary>
            Mapping profile for custom rules.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Mapping.ApplicationMappingProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Mapping.ApplicationMappingProfile"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Mapping.AssemblyMappingProfile">
            <summary>
            Abstract assembly mapping profile for registration of all mappings configurations.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Mapping.AssemblyMappingProfile.#ctor(System.Reflection.Assembly)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Mapping.AssemblyMappingProfile"/> class.
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Mapping.IMapFrom`1">
            <summary>
            Auto configure mapping for specified mapping object with implemented entity.
            </summary>
            <typeparam name="TEntity">Mapping object.</typeparam>
        </member>
        <member name="M:Definux.Emeraude.Application.Mapping.IMapFrom`1.Mapping(AutoMapper.Profile)">
            <summary>
            Configure mapping for mapping object with implemented entity.
            </summary>
            <param name="profile"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Persistence.IApplicationDatabaseInitializer">
            <summary>
            Definition of <see cref="T:Definux.Emeraude.Interfaces.Services.IDatabaseInitializer"/> for the default application data.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Persistence.IDatabaseContext">
            <summary>
            Database context interface of Emeraude application that contains main functions of <see cref="T:Microsoft.EntityFrameworkCore.DbContext"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Persistence.IDatabaseContext.Set``1">
            <summary>
            Creates a Microsoft.EntityFrameworkCore.DbSet`1 that can be used to query and save instances of TEntity.
            </summary>
            <typeparam name="TEntity">The type of entity for which a set should be returned.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Persistence.IDatabaseContext.SaveChanges">
            <summary>
            <inheritdoc cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Persistence.IDatabaseContext.SaveChanges(System.Boolean)">
            <inheritdoc cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Persistence.IDatabaseContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Definux.Emeraude.Application.Persistence.IDatabaseContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <inheritdoc cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="T:Definux.Emeraude.Application.Persistence.IDatabaseInitializerManager">
            <summary>
            Database initializer manager that load and trigger all database initializers for the application.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Persistence.IDatabaseInitializerManager.LoadDatabaseInitializers(System.Type[])">
            <summary>
            Load database initializers types. Their execution is in the order of their adding.
            </summary>
            <param name="initializersTypes"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Persistence.IEmContext">
            <summary>
            Main database context of Emeraude application.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Persistence.IEmContext.GetContextType">
            <summary>
            Method that returns the type of the context.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Files.Commands.Shared.UploadResult">
            <summary>
            Upload result used for files upload commands.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Files.Commands.Shared.UploadResult.Success">
            <summary>
            Boolean status of the result.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Files.Commands.Shared.UploadResult.Message">
            <summary>
            Message of the result.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Files.Commands.Shared.UploadResult.ValidationError">
            <summary>
            Boolean status that indicates that the file is not uploaded because of validation error.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Files.Commands.Shared.UploadResult.ResultFileId">
            <summary>
            Temp file result id.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.Shared.UploadResult.SuccessResult(System.Int32)">
            <summary>
            Built upload success result.
            </summary>
            <param name="tempFileId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.Shared.UploadResult.ErrorResult(System.String)">
            <summary>
            Built upload error result.
            </summary>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.Shared.UploadResult.ValidationErrorResult(System.String)">
            <summary>
            Built upload error result with message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand">
            <summary>
            Command for uploading files.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand.#ctor(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand"/> class.
            </summary>
            <param name="formFile"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand.#ctor(Microsoft.AspNetCore.Http.IFormFile,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand"/> class.
            </summary>
            <param name="formFile"></param>
            <param name="saveDirectory"></param>
            <param name="publicRoot"></param>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand.SaveDirectory">
            <summary>
            Save directory of the file.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand.PublicRoot">
            <summary>
            Flag that indicates whether the target root is public (for true) or private (for false).
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand.FormFile">
            <inheritdoc cref="T:Microsoft.AspNetCore.Http.IFormFile"/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand.UploadFileCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand.UploadFileCommandHandler.#ctor(Definux.Emeraude.Application.Files.IFilesValidationProvider,Definux.Emeraude.Application.Files.ISystemFilesService,Definux.Emeraude.Application.Files.IUploadService)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand.UploadFileCommandHandler"/> class.
            </summary>
            <param name="validationProvider"></param>
            <param name="systemFilesService"></param>
            <param name="uploadService"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand.UploadFileCommandHandler.Handle(Definux.Emeraude.Application.Requests.Files.Commands.UploadFile.UploadFileCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadImage.UploadImageCommand">
            <summary>
            Command for uploading images.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.UploadImage.UploadImageCommand.#ctor(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadImage.UploadImageCommand"/> class.
            </summary>
            <param name="formFile"></param>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Files.Commands.UploadImage.UploadImageCommand.FormFile">
            <inheritdoc cref="T:Microsoft.AspNetCore.Http.IFormFile"/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadImage.UploadImageCommand.UploadImageCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.UploadImage.UploadImageCommand.UploadImageCommandHandler.#ctor(Definux.Emeraude.Application.Files.IFilesValidationProvider,Definux.Emeraude.Application.Files.ISystemFilesService,Definux.Emeraude.Application.Files.IUploadService)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadImage.UploadImageCommand.UploadImageCommandHandler"/> class.
            </summary>
            <param name="validationProvider"></param>
            <param name="systemFilesService"></param>
            <param name="uploadService"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.UploadImage.UploadImageCommand.UploadImageCommandHandler.Handle(Definux.Emeraude.Application.Requests.Files.Commands.UploadImage.UploadImageCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadVideo.UploadVideoCommand">
            <summary>
            Command for uploading video files.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.UploadVideo.UploadVideoCommand.#ctor(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadVideo.UploadVideoCommand"/> class.
            </summary>
            <param name="formFile"></param>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Files.Commands.UploadVideo.UploadVideoCommand.FormFile">
            <inheritdoc cref="T:Microsoft.AspNetCore.Http.IFormFile"/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadVideo.UploadVideoCommand.UploadVideoCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.UploadVideo.UploadVideoCommand.UploadVideoCommandHandler.#ctor(Definux.Emeraude.Application.Files.IFilesValidationProvider,Definux.Emeraude.Application.Files.ISystemFilesService,Definux.Emeraude.Application.Files.IUploadService)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Files.Commands.UploadVideo.UploadVideoCommand.UploadVideoCommandHandler"/> class.
            </summary>
            <param name="validationProvider"></param>
            <param name="systemFilesService"></param>
            <param name="uploadService"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Files.Commands.UploadVideo.UploadVideoCommand.UploadVideoCommandHandler.Handle(Definux.Emeraude.Application.Requests.Files.Commands.UploadVideo.UploadVideoCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationCommand">
            <summary>
            Command for activation two factor authentication for a user.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationCommand"/> class.
            </summary>
            <param name="code"></param>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationCommand.Code">
            <summary>
            Authenticator code.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationCommand.ActivateTwoFactorAuthenticationCommandHandler">
            <summary>
            Activate two factor authentication command handler.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationCommand.ActivateTwoFactorAuthenticationCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.Identity.ICurrentUserProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationCommand.ActivateTwoFactorAuthenticationCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="currentUserProvider"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationCommand.ActivateTwoFactorAuthenticationCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationCommandValidator">
            <summary>
            Validator for activate two factor authentication command.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationCommandValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationCommandValidator"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationResult">
            <summary>
            Result for two factor authentication request.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationResult.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ActivateTwoFactorAuthentication.ActivateTwoFactorAuthenticationResult"/> class.
            </summary>
            <param name="success"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommand">
            <summary>
            Command that change the email of the specified user.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommand.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommand"/> class.
            </summary>
            <param name="newEmail"></param>
            <param name="token"></param>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommand.NewEmail">
            <summary>
            Email of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommand.Token">
            <summary>
            Confirmation token of the user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommand.ChangeEmailCommandHandler">
            <inheritdoc />
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommand.ChangeEmailCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.Logger.IEmLogger,Definux.Emeraude.Application.Identity.ICurrentUserProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommand.ChangeEmailCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="logger"></param>
            <param name="currentUserProvider"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommand.ChangeEmailCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommand,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommandValidator">
            <summary>
            Validator for <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommand"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommandValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeEmail.ChangeEmailCommandValidator"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommand">
            <summary>
            Command for changing password of a specified user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommand.UserId">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommand.CurrentPassword">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommand.NewPassword">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommand.ConfirmedPassword">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommand.ChangePasswordCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommand.ChangePasswordCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommand.ChangePasswordCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommand.ChangePasswordCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommandValidator">
            <summary>
            Validator of change password command.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommandValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommandValidator"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordRequestResult">
            <summary>
            Change password command result.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordRequestResult.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordRequestResult"/> class.
            </summary>
            <param name="success"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserAvatar.ChangeUserAvatarCommand">
            <summary>
            Command that change the user avatar.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserAvatar.ChangeUserAvatarCommand.AvatarFileBase64">
            <summary>
            User avatar image in base64 format.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserAvatar.ChangeUserAvatarCommand.UserId">
            <summary>
            Id of the user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserAvatar.ChangeUserAvatarCommand.ChangeUserAvatarCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserAvatar.ChangeUserAvatarCommand.ChangeUserAvatarCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserAvatarService,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserAvatar.ChangeUserAvatarCommand.ChangeUserAvatarCommandHandler"/> class.
            </summary>
            <param name="userAvatarService"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserAvatar.ChangeUserAvatarCommand.ChangeUserAvatarCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserAvatar.ChangeUserAvatarCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommand">
            <summary>
            Command that change the user's name.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommand.UserId">
            <summary>
            Id of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommand.NewName">
            <summary>
            New name of the user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommand.ChangeUserNameCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommand.ChangeUserNameCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommand.ChangeUserNameCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommand.ChangeUserNameCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommandValidator">
            <summary>
            Validator for <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommand"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommandValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommandValidator"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommand">
            <summary>
            Command for confirming email of specified user.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommand.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommand"/> class.
            </summary>
            <param name="email"></param>
            <param name="token"></param>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommand.Email">
            <summary>
            Email of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommand.Token">
            <summary>
            Confirmation token of the user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommand.ConfirmEmailCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommand.ConfirmEmailCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.EventHandlers.IIdentityEventManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommand.ConfirmEmailCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="identityEventManager"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommand.ConfirmEmailCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommandValidator">
            <summary>
            Validator for confirm email command.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommandValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailCommandValidator"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailRequestResult">
            <summary>
            Confirm email command result.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailRequestResult.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ConfirmEmail.ConfirmEmailRequestResult"/> class.
            </summary>
            <param name="success"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand">
            <summary>
            Command for external authentication of user.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand.#ctor(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand"/> class.
            </summary>
            <param name="claimsPrincipal"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand.#ctor(Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand"/> class.
            </summary>
            <param name="externalAuthenticationData"></param>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand.ClaimsPrincipal">
            <inheritdoc cref="T:System.Security.Claims.ClaimsPrincipal"/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand.ExternalAuthenticationData">
            <inheritdoc cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationData"/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand.ExternalAuthenticationCommandHandler">
            <inheritdoc/>
        </member>
        <member name="F:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand.ExternalAuthenticationCommandHandler.FacebookExternalProvider">
            <summary>
            Name of the Facebook external provider.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand.ExternalAuthenticationCommandHandler.GoogleExternalProvider">
            <summary>
            Name of the Google external provider.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand.ExternalAuthenticationCommandHandler.#ctor(Definux.Emeraude.Application.Logger.IEmLogger,Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.Identity.IUserAvatarService,Definux.Emeraude.Application.EventHandlers.IIdentityEventManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand.ExternalAuthenticationCommandHandler"/> class.
            </summary>
            <param name="logger"></param>
            <param name="userManager"></param>
            <param name="userAvatarService"></param>
            <param name="eventManager"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand.ExternalAuthenticationCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationData">
            <inheritdoc cref="T:Definux.Emeraude.Interfaces.Requests.IExternalLoginRequest"/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationData.Provider">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationData.AccessToken">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationRequestResult">
            <summary>
            Result of external authentication request.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationRequestResult.Result">
            <summary>
            Result of the authentication.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ExternalAuthenticationRequestResult.User">
            <summary>
            Authenticated user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.FacebookExternalUser">
            <summary>
            Facebook external user implementation.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.FacebookExternalUser.Id">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.FacebookExternalUser.Name">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.FacebookExternalUser.FirstName">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.FacebookExternalUser.LastName">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.FacebookExternalUser.EmailAddress">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.FacebookExternalUser.Provider">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.FacebookExternalUser.PictureUrl">
            <inheritdoc cref="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.FacebookExternalUser.Picture"/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.FacebookExternalUser.Picture">
            <summary>
            Picture of the user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.GoogleExternalUser">
            <summary>
            Google external user implementation.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.GoogleExternalUser.Id">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.GoogleExternalUser.Name">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.GoogleExternalUser.FirstName">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.GoogleExternalUser.LastName">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.GoogleExternalUser.EmailAddress">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.GoogleExternalUser.Provider">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.GoogleExternalUser.Picture">
            <inheritdoc cref="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.GoogleExternalUser.PictureUrl"/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.GoogleExternalUser.PictureUrl">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.IExternalUser">
            <summary>
            Interface of external user definition.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.IExternalUser.Id">
            <summary>
            Identificator of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.IExternalUser.Name">
            <summary>
            Name of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.IExternalUser.FirstName">
            <summary>
            First name of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.IExternalUser.LastName">
            <summary>
            Last name of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.IExternalUser.EmailAddress">
            <summary>
            Email address of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.IExternalUser.Provider">
            <summary>
            External provider name.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.IExternalUser.PictureUrl">
            <summary>
            Picture of the user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ProfilePicture">
            <summary>
            Helper class for mapping Facebook profile picture.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ProfilePicture.Data">
            <summary>
            Profile picture data.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ProfilePictureData">
            <summary>
            Helper class for mapping Facebook profile picture data.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ExternalAuthentication.ProfilePictureData.Url">
            <summary>
            Url of the picture.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordCommand">
            <summary>
            Command for forgot password request.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordCommand.Email">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordCommand.ForgotPasswordCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordCommand.ForgotPasswordCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.EventHandlers.IIdentityEventManager,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Http.IHttpContextAccessor,Definux.Emeraude.Application.Localization.ICurrentLanguageProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordCommand.ForgotPasswordCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="identityEventManager"></param>
            <param name="urlEncoder"></param>
            <param name="httpContextAccessor"></param>
            <param name="currentLanguageProvider"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordCommand.ForgotPasswordCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordCommandValidator">
            <summary>
            Validator for client forgot password command.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordCommandValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordCommandValidator"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordRequestResult">
            <summary>
            Forgot password command result.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordRequestResult.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ForgotPassword.ForgotPasswordRequestResult"/> class.
            </summary>
            <param name="success"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommand">
            <summary>
            Command for user login with two factor authentication.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommand.#ctor(Definux.Emeraude.Domain.Entities.IUser,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommand"/> class.
            </summary>
            <param name="user"></param>
            <param name="code"></param>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommand.Code">
            <summary>
            Two factor authentication code.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommand.User">
            <summary>
            Target user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommand.LoginWithTwoFactorAuthenticationCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommand.LoginWithTwoFactorAuthenticationCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommand.LoginWithTwoFactorAuthenticationCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommand.LoginWithTwoFactorAuthenticationCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommandValidator">
            <summary>
            Validator for login with two factor authentication command.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommandValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationCommandValidator"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationRequestResult">
            <summary>
            Login with two factor authenticaiton command result.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationRequestResult.Result">
            <inheritdoc cref="T:Microsoft.AspNetCore.Identity.SignInResult"/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.LoginWithTwoFactorAuthentication.LoginWithTwoFactorAuthenticationRequestResult.User">
            <summary>
            Target user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginCommand">
            <summary>
            Command for user login.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginCommand.Email">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginCommand.Password">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginCommand.LoginCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginCommand.LoginCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.EventHandlers.IIdentityEventManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginCommand.LoginCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="eventManager"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginCommand.LoginCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginCommandValidator">
            <summary>
            Validator for login command.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginCommandValidator.#ctor(Definux.Emeraude.Application.Identity.IUserManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginCommandValidator"/> class.
            </summary>
            <param name="userManager"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginRequestResult">
            <summary>
            Result of the login command.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginRequestResult.Result">
            <summary>
            Status of the result.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.Login.LoginRequestResult.User">
            <summary>
            Target user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommand">
            <summary>
            Command for refresh access token of specified user.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommand.#ctor(System.Nullable{System.Guid},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommand"/> class.
            </summary>
            <param name="userId"></param>
            <param name="refreshToken"></param>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommand.RefreshToken">
            <summary>
            Refresh token.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommand.UserId">
            <summary>
            Target user id.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommand.RefreshAccessTokenCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommand.RefreshAccessTokenCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserTokensService)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommand.RefreshAccessTokenCommandHandler"/> class.
            </summary>
            <param name="userTokensService"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommand.RefreshAccessTokenCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommandValidator">
            <summary>
            Validator for refresh access token command.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommandValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.RefreshAccessToken.RefreshAccessTokenCommandValidator"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommand">
            <summary>
            Command for client user registration.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommand.Name">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommand.Email">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommand.Password">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommand.ConfirmedPassword">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommand.RegisterCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommand.RegisterCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.EventHandlers.IIdentityEventManager,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Http.IHttpContextAccessor,Definux.Emeraude.Application.Localization.ICurrentLanguageProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommand.RegisterCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="eventManager"></param>
            <param name="urlEncoder"></param>
            <param name="httpContextAccessor"></param>
            <param name="currentLanguageProvider"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommand.RegisterCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommandValidator">
            <summary>
            Validator for client registration command.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommandValidator.#ctor(Definux.Emeraude.Application.Identity.IUserManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterCommandValidator"/> class.
            </summary>
            <param name="userManager">User Manager provided from Emeraude Identity.</param>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterRequestResult">
            <summary>
            Result of the register request.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterRequestResult.Result">
            <summary>
            <inheritdoc cref="T:Microsoft.AspNetCore.Identity.IdentityResult"/>
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.Register.RegisterRequestResult.User">
            <summary>
            Target user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommand">
            <summary>
            Command for remove external login provider from specified user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommand.UserId">
            <summary>
            Id of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommand.Provider">
            <summary>
            External login provider.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommand.Password">
            <summary>
            Password of the specified user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommand.ResetTwoFactorAuthenticationCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommand.ResetTwoFactorAuthenticationCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommand.ResetTwoFactorAuthenticationCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommand.ResetTwoFactorAuthenticationCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommandValidator">
            <summary>
            Validator of remove external login provider command.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommandValidator.#ctor(Definux.Emeraude.Application.Identity.IUserManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommandValidator"/> class.
            </summary>
            <param name="userManager"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand">
            <summary>
            Command that send request for change email for specified user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand.UserId">
            <summary>
            Id of the target user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand.NewEmail">
            <summary>
            New email of the target user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand.LocalCallbackUrl">
            <summary>
            Url that will be applied into the change email link.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand.UseLocalization">
            <summary>
            Flag that indicates whether to apply localization parameter to change email link.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand.ConfigureCallbackOptions(System.String,System.Boolean)">
            <summary>
            Configure the callback options for change email link.
            </summary>
            <param name="localCallbackUrl"></param>
            <param name="useLocalization"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand.RequestChangeEmailCommandHandler">
            <inheritdoc />
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand.RequestChangeEmailCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.Logger.IEmLogger,Definux.Emeraude.Application.Localization.ICurrentLanguageProvider,Definux.Emeraude.Application.EventHandlers.IIdentityEventManager,Microsoft.AspNetCore.Http.IHttpContextAccessor,System.Text.Encodings.Web.UrlEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand.RequestChangeEmailCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="logger"></param>
            <param name="currentLanguageProvider"></param>
            <param name="identityEventManager"></param>
            <param name="httpContextAccessor"></param>
            <param name="urlEncoder"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand.RequestChangeEmailCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommandValidator">
            <summary>
            Validator for <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommandValidator.#ctor(Definux.Emeraude.Application.Identity.IUserManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommandValidator"/> class.
            </summary>
            <param name="userManager"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommand">
            <summary>
            Command for client reset password of user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommand.Email">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommand.Password">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommand.ConfirmedPassword">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommand.Token">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommand.ResetPasswordCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommand.ResetPasswordCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.EventHandlers.IIdentityEventManager,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Http.IHttpContextAccessor,Definux.Emeraude.Application.Localization.ICurrentLanguageProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommand.ResetPasswordCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="identityEventManager"></param>
            <param name="urlEncoder"></param>
            <param name="httpContextAccessor"></param>
            <param name="currentLanguageProvider"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommand.ResetPasswordCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommandValidator">
            <summary>
            Validator of reset password command.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommandValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordCommandValidator"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordRequestResult">
            <summary>
            Reset password command result.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordRequestResult.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ResetPassword.ResetPasswordRequestResult"/> class.
            </summary>
            <param name="success"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ResetTwoFactorAuthentication.ResetTwoFactorAuthenticationCommand">
            <summary>
            Command for reset two factor authenticator.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ResetTwoFactorAuthentication.ResetTwoFactorAuthenticationCommand.ResetTwoFactorAuthenticationCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ResetTwoFactorAuthentication.ResetTwoFactorAuthenticationCommand.ResetTwoFactorAuthenticationCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.Identity.ICurrentUserProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ResetTwoFactorAuthentication.ResetTwoFactorAuthenticationCommand.ResetTwoFactorAuthenticationCommandHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="currentUserProvider"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ResetTwoFactorAuthentication.ResetTwoFactorAuthenticationCommand.ResetTwoFactorAuthenticationCommandHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Commands.ResetTwoFactorAuthentication.ResetTwoFactorAuthenticationCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Commands.ResetTwoFactorAuthentication.ResetTwoFactorAuthenticationResult">
            <summary>
            Reset two factor authenticator command result.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Commands.ResetTwoFactorAuthentication.ResetTwoFactorAuthenticationResult.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Commands.ResetTwoFactorAuthentication.ResetTwoFactorAuthenticationResult"/> class.
            </summary>
            <param name="success"></param>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.GetUserAvatarQuery">
            <summary>
            Query that returns the avatar stream of specified user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.GetUserAvatarQuery.UserId">
            <summary>
            Id of the user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.GetUserAvatarQuery.GetUserAvatarQueryHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.GetUserAvatarQuery.GetUserAvatarQueryHandler.#ctor(Definux.Emeraude.Application.Files.ISystemFilesService,Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.Identity.IUserAvatarService,Definux.Emeraude.Application.Files.IRootsService,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.GetUserAvatarQuery.GetUserAvatarQueryHandler"/> class.
            </summary>
            <param name="systemFilesService"></param>
            <param name="userManager"></param>
            <param name="userAvatarService"></param>
            <param name="rootsService"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.GetUserAvatarQuery.GetUserAvatarQueryHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.GetUserAvatarQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.GetUserAvatarResult">
            <summary>
            Result of <see cref="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.GetUserAvatarQuery"/>.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.GetUserAvatarResult.Avatar">
            <summary>
            Avatar file result.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.GetUserAvatarResult.GetUserAvatarType">
            <summary>
            Gets the user avatar type result.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.UserAvatarTypeResult">
            <summary>
            Result of <see cref="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.GetUserAvatarQuery"/>.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserAvatar.UserAvatarTypeResult.IsDefault">
            <summary>
            Flag that indicates whether the result avatar is the system default or not.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.GetUserExternalLoginProvidersQuery">
            <summary>
            Query that returns the specified user external login providers.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.GetUserExternalLoginProvidersQuery.UserId">
            <summary>
            Id of the user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.GetUserExternalLoginProvidersQuery.GetUserExternalLoginProvidersQueryHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.GetUserExternalLoginProvidersQuery.GetUserExternalLoginProvidersQueryHandler.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.GetUserExternalLoginProvidersQuery.GetUserExternalLoginProvidersQueryHandler"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.GetUserExternalLoginProvidersQuery.GetUserExternalLoginProvidersQueryHandler.Handle(Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.GetUserExternalLoginProvidersQuery,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.GetUserExternalLoginProvidersResult">
            <summary>
            Result of <see cref="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.GetUserExternalLoginProvidersQuery"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.GetUserExternalLoginProvidersResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.GetUserExternalLoginProvidersResult"/> class.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.GetUserExternalLoginProvidersResult.Providers">
            <summary>
            Collection of user external login providers.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.UserExternalLoginProvider">
            <summary>
            Wrap for external login provider.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.UserExternalLoginProvider.Provider">
            <summary>
            External login provider.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Identity.Queries.GetUserExternalLoginProviders.UserExternalLoginProvider.ProviderDisplayName">
            <summary>
            External login provider display name.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Logging.Commands.LogFrontEndError.LogFrontEndErrorCommand">
            <summary>
            Command for log front-end error.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Logging.Commands.LogFrontEndError.LogFrontEndErrorCommand.StackTrace">
            <summary>
            Stack trace of the error.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Logging.Commands.LogFrontEndError.LogFrontEndErrorCommand.Source">
            <summary>
            Error source.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Logging.Commands.LogFrontEndError.LogFrontEndErrorCommand.Method">
            <summary>
            The method where the error occured.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Application.Requests.Logging.Commands.LogFrontEndError.LogFrontEndErrorCommand.Message">
            <summary>
            Message of the error.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Application.Requests.Logging.Commands.LogFrontEndError.LogFrontEndErrorCommand.LogFrontEndErrorCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Logging.Commands.LogFrontEndError.LogFrontEndErrorCommand.LogFrontEndErrorCommandHandler.#ctor(Definux.Emeraude.Application.Logger.IEmLogger,Definux.Emeraude.Application.Logger.ILoggerContext,AutoMapper.IMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Application.Requests.Logging.Commands.LogFrontEndError.LogFrontEndErrorCommand.LogFrontEndErrorCommandHandler"/> class.
            </summary>
            <param name="logger"></param>
            <param name="loggerContext"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Definux.Emeraude.Application.Requests.Logging.Commands.LogFrontEndError.LogFrontEndErrorCommand.LogFrontEndErrorCommandHandler.Handle(Definux.Emeraude.Application.Requests.Logging.Commands.LogFrontEndError.LogFrontEndErrorCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
    </members>
</doc>
