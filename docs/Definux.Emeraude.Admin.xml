<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Definux.Emeraude.Admin</name>
    </assembly>
    <members>
        <member name="T:Definux.Emeraude.Admin.Adapters.EmContextAdapter">
            <inheritdoc cref="T:Definux.Emeraude.Admin.UI.Adapters.IEmContextAdapter"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Adapters.EmContextAdapter.#ctor(Definux.Emeraude.Application.Persistence.IEmContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Adapters.EmContextAdapter"/> class.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Adapters.EmContextAdapter.GetAllEntitiesByPropertyName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Adapters.EmContextAdapter.GetAllEntitiesByType(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Adapters.IdentityUserInfoAdapter">
            <inheritdoc cref="T:Definux.Emeraude.Admin.UI.Adapters.IIdentityUserInfoAdapter"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Adapters.IdentityUserInfoAdapter.#ctor(Definux.Emeraude.Application.Identity.ICurrentUserProvider,Definux.Emeraude.Application.Identity.IUserClaimsService,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Adapters.IdentityUserInfoAdapter"/> class.
            </summary>
            <param name="currentUserProvider"></param>
            <param name="userClaimsService"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Adapters.IdentityUserInfoAdapter.GetCurrentUserInfoAsync">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Adapters.IdentityUserInfoAdapter.GetCurrentUserClaimsAsync">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.AdminAssembly">
            <summary>
            Assembly provider of the Emeraude administration.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.AdminAssembly.GetAssembly">
            <summary>
            Gets the assembly of the Emeraude administration.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Attributes.BreadcrumbAttribute">
            <summary>
            Attribute that add filled data as a breadcrumb item.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Attributes.BreadcrumbAttribute.#ctor(System.String,System.Boolean,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Attributes.BreadcrumbAttribute"/> class.
            </summary>
            <param name="title">Title text in the breadcrumb. Use "[SomeKey]" to add custom title based on the route. The key must be part of the ViewData collection.</param>
            <param name="active"></param>
            <param name="order"></param>
            <param name="action"></param>
            <param name="controller"></param>
            <param name="parameterName"></param>
            <param name="parameterValue"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.BreadcrumbAttribute.ParentRouteKey">
            <summary>
            Route key that represent the parent reference.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.BreadcrumbAttribute.UseParentController">
            <summary>
            To use this property the caller controller must inherit <see cref="T:Definux.Emeraude.Presentation.Controllers.IChildController"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Attributes.BreadcrumbAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Attributes.DetailsFieldAttribute">
            <summary>
            Attribute used for rendering the details card of the details action of admin entity controller.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Attributes.DetailsFieldAttribute.#ctor(System.Int32,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Attributes.DetailsFieldAttribute"/> class.
            </summary>
            <param name="order"></param>
            <param name="title"></param>
            <param name="uiElementType"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Attributes.DetailsFieldAttribute.#ctor(System.Int32,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Attributes.DetailsFieldAttribute"/> class.
            </summary>
            <param name="order"></param>
            <param name="uiElementType"></param>
            <param name="propertyName"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.DetailsFieldAttribute.Order">
            <summary>
            Order of the rendered item.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.DetailsFieldAttribute.Title">
            <summary>
            Label of the rendered item.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.DetailsFieldAttribute.UIElementType">
            <summary>
            UI element type that implemented <see cref="T:Definux.Emeraude.Admin.UI.UIElements.Details.IDetailsFieldElement"/>.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Attributes.EntityIdentifierAttribute">
            <summary>
            Attribute that indicates that the property is identifier for the specified object.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Attributes.FormInputAttribute">
            <summary>
            Attribute that include the decorated property into the create/edit form of entity admin controller.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Attributes.FormInputAttribute.#ctor(System.Int32,System.String,System.Type,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Attributes.FormInputAttribute"/> class.
            </summary>
            <param name="order"></param>
            <param name="name"></param>
            <param name="uiElementType"></param>
            <param name="dataSourceType"></param>
            <param name="visualizationPropertyName"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Attributes.FormInputAttribute.#ctor(System.Int32,System.Type,System.Type,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Attributes.FormInputAttribute"/> class.
            </summary>
            <param name="order"></param>
            <param name="uiElementType"></param>
            <param name="dataSourceType"></param>
            <param name="visualizationPropertyName"></param>
            <param name="propertyName"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.FormInputAttribute.Order">
            <summary>
            Order of the form input.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.FormInputAttribute.Name">
            <summary>
            Name of the label of the form input.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.FormInputAttribute.UIElementType">
            <summary>
            UI element type that implemented <see cref="T:Definux.Emeraude.Admin.UI.UIElements.Form.IFormElement"/>.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.FormInputAttribute.DataSourceType">
            <summary>
            The existence of this property defines external data source for the current property. In case you use database source or additional data source map <see cref="T:Definux.Emeraude.Admin.UI.UIElements.IDataSourceMap"/>.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.FormInputAttribute.VisualizationPropertyName">
            <summary>
            Name of the property that will be visualized on the form element.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Attributes.TableColumnAttribute">
            <summary>
            Attribute used for rendering the table of the get all action of admin entity controller.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Attributes.TableColumnAttribute.#ctor(System.Int32,System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Attributes.TableColumnAttribute"/> class.
            </summary>
            <param name="order"></param>
            <param name="name"></param>
            <param name="uiElementType"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Attributes.TableColumnAttribute.#ctor(System.Int32,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Attributes.TableColumnAttribute"/> class.
            </summary>
            <param name="order"></param>
            <param name="uiElementType"></param>
            <param name="propertyName"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.TableColumnAttribute.Order">
            <summary>
            Order of the column.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.TableColumnAttribute.Name">
            <summary>
            Name of the column.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Attributes.TableColumnAttribute.UIElementType">
            <summary>
            UI element type that implemented <see cref="T:Definux.Emeraude.Admin.UI.UIElements.Table.ITableElement"/>.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4">
            <summary>
            Child admin controller of Entity Admin Controller that provides ready to use CRUD actions for specific entity and its view model with behavior of child controller.
            </summary>
            <typeparam name="TEntity">Entity from the domain model.</typeparam>
            <typeparam name="TEntityViewModel">View Model for selected entity.</typeparam>
            <typeparam name="TParentEntity">Parent entity from the parent controller.</typeparam>
            <typeparam name="TParentController">Parent controller which must be Entity Admin Controller.</typeparam>
        </member>
        <member name="F:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.ParentRouteKeyPropertyName">
            <summary>
            Parent route key property name. Used for inner processing of the controller.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.BreadcrumbParentTitlePlaceholder">
            <summary>
            Breadcrumb parent title placeholder for transferring custom parent title to breadcrumbs list.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.ParentController">
            <summary>
            Name of the parent controller.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.ParentRouteKey">
            <summary>
            Route key that defines the parent identification into the URL.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.ParentProperty">
            <summary>
            Parent property from the target entity.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.ParentExpression">
            <summary>
            Expression of the property from the child entity that referenced the parent entity. Comparison has to be made with <see cref="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.ParentIdentifier"/>.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.ParentIdentifier">
            <summary>
            Identification of the parent entity which will be extracted by the <see cref="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.ParentRouteKey"/> from the route values.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.GetAll(System.Int32,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.Details(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.Create">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.Create(`1)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.Edit(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.Edit(System.Guid,`1)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.GetGetAllQuery(System.Int32,System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.GetDetailsQuery(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.GetCreateCommand(`1)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.GetEditCommand(System.Guid,`1)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.GetDeleteCommand(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.RedirectToAll">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.RedirectToDetails(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.UpdateControllerRoute">
            <summary>
            Update the controller route with the parent reference.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.BuildTableViewActions">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.BuildTableViewNavigationActions">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.ValidateExistenceAsync">
            <summary>
            Check the existence of the parent entity of the controller.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminChildEntityController`4.ApplyParentBreadcrumbTitle">
            <summary>
            Apply the title of the parent entity into the breadcrumbs.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController">
            <summary>
            Abstract admin controller that provides all required services and methods you need in the administration panel.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.AdminAreaName">
            <summary>
            Admin area name.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController"/> class.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.AreaName">
            <summary>
            Name of the area of the controller.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.ControllerName">
            <summary>
            Name of the controller.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.ActionName">
            <summary>
            Name of the action.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.ControllerRoute">
            <summary>
            Route of the controller.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.Logger">
            <inheritdoc cref="T:Definux.Emeraude.Application.Logger.IEmLogger"/>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.Mediator">
            <inheritdoc cref="T:MediatR.IMediator"/>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.UrlEncoder">
            <inheritdoc cref="T:System.Text.Encodings.Web.UrlEncoder"/>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.CurrentUserProvider">
            <inheritdoc cref="T:Definux.Emeraude.Application.Identity.ICurrentUserProvider"/>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.DisableActivityLog">
            <summary>
            Flag that activate and disable activity logging by Emeraude logger.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.HideActivityLogParameters">
            <summary>
            Flag that hide or show the request params in activity log.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <inheritdoc cref="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.BuildControllerRoute(System.String)">
            <summary>
            Build controller route for current controller.
            </summary>
            <param name="route"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.InitializeNavigationActions(System.Collections.Generic.IEnumerable{Definux.Emeraude.Admin.UI.ViewModels.Layout.NavigationActionViewModel})">
            <summary>
            Initialize navigation actions for the navbar of the admin panel.
            </summary>
            <param name="actions"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.ShowSuccessNotification(System.String)">
            <summary>
            Add success notificaiton message in entities table view.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.ShowErrorNotification(System.String)">
            <summary>
            Add error notification message in entities table view.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminController.ShowComputationNotification(System.Boolean,System.String,System.String)">
            <summary>
            Add notification message based on computation result.
            </summary>
            <param name="success"></param>
            <param name="successMessage"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="T:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2">
            <summary>
            Admin controller that provides ready to use CRUD actions for specific entity and its view model.
            </summary>
            <typeparam name="TEntity">Entity from the domain model.</typeparam>
            <typeparam name="TEntityViewModel">View Model for selected entity.</typeparam>
        </member>
        <member name="F:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.BreadcrumbPageTitlePlaceholder">
            <summary>
            Breadcrumb page title default placeholder for transferring custom page title to breadcrumbs list.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.BreadcrumbEntityNamePluralPlaceholder">
            <summary>
            Breadcrumb plural entity name default placeholder for transferring custom entity plural name to breadcrumbs list.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2"/> class.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.EntityName">
            <summary>
            Name of the controller entity.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.HasCreate">
            <summary>
            Flag that turn on/off the entity creation provided by the controller.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.HasDetails">
            <summary>
            Flag that turn on/off details page provided by the controller.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.HasEdit">
            <summary>
            Flag that turn on/off the entity modification provided by the controller.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.HasDelete">
            <summary>
            Flag that turn on/off the entity deletion provided by the controller.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.DeleteRedirectUrlFunction">
            <summary>
            Deletion callback on success deletion of the entity.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetAll(System.Int32,System.String,System.String,System.String)">
            <summary>
            Get all action.
            </summary>
            <param name="page"></param>
            <param name="searchQuery"></param>
            <param name="orderBy"></param>
            <param name="orderType"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.Details(System.Guid)">
            <summary>
            Details action.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.Create">
            <summary>
            Create action for GET request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.Create(`1)">
            <summary>
            Create action for POST request.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.Edit(System.Guid)">
            <summary>
            Edit action for GET request.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.Edit(System.Guid,`1)">
            <summary>
            Edit action for POST request..
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.Delete(System.Guid)">
            <summary>
            Delete action.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetGetAllQuery(System.Int32,System.String,System.String,System.String)">
            <summary>
            Method that return the instance of <see cref="T:Definux.Emeraude.Admin.Requests.GetAll.IGetAllQuery`2"/> for current entity and view-model.
            </summary>
            <param name="page"></param>
            <param name="searchQuery"></param>
            <param name="orderBy"></param>
            <param name="orderType"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetAllEntitiesPaginatedAsync(System.Int32,System.String,System.String,System.String)">
            <summary>
            Get all action executor.
            </summary>
            <param name="page"></param>
            <param name="query"></param>
            <param name="orderBy"></param>
            <param name="orderType"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetDetailsQuery(System.Guid)">
            <summary>
            Method that return the instance of <see cref="T:Definux.Emeraude.Admin.Requests.Details.IDetailsQuery`2"/> for current entity and view-model.
            </summary>
            <param name="entityId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetEntityAsync(System.Guid)">
            <summary>
            Details action executor.
            </summary>
            <param name="entityId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetCreateCommand(`1)">
            <summary>
            Method that return the instance of <see cref="T:Definux.Emeraude.Admin.Requests.Create.ICreateCommand`2"/> for current entity and view-model.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.CreateEntityAsync(`1)">
            <summary>
            Create action executor.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetEditCommand(System.Guid,`1)">
            <summary>
            Method that return the instance of <see cref="T:Definux.Emeraude.Admin.Requests.Edit.IEditCommand`2"/> for current entity and view-model.
            </summary>
            <param name="entityId"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.ModifyEntityAsync(System.Guid,`1)">
            <summary>
            Edit action executor.
            </summary>
            <param name="entityId"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetDeleteCommand(System.Guid)">
            <summary>
            Method that return the instance of <see cref="T:Definux.Emeraude.Admin.Requests.Delete.IDeleteCommand`1"/> for current entity and view-model.
            </summary>
            <param name="entityId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.DeleteEntityAsync(System.Guid)">
            <summary>
            Delete action executor.
            </summary>
            <param name="entityId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.BuildTableViewNavigationActions">
            <summary>
            Build the default table view navigation actions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.BuildTableViewActions">
            <summary>
            Build the default table view actions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.OnEntityCreatedAsync(System.Guid)">
            <summary>
            This methods is triggered when an entity is created successfully.
            </summary>
            <param name="entityId">Entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.OnEntityEditedAsync(System.Guid)">
            <summary>
            This methods is triggered when an entity is edited successfully.
            </summary>
            <param name="entityId">Entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.OnEntityDeletedAsync(System.Guid)">
            <summary>
            This methods is triggered when an entity is deleted successfully.
            </summary>
            <param name="entityId">Entity identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetHttpContextPageNumber">
            <summary>
            Returns page number from query string of table view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetHttpContextSearchQuery">
            <summary>
            Returns search query from query string of table view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetGalleryActionAsync``1(System.Guid,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Get action used for visualization of image gallery of entity.
            </summary>
            <typeparam name="TEntityWithImage">Entity that implements <see cref="T:Definux.Emeraude.Domain.Entities.IEntityWithImage"/>.</typeparam>
            <param name="entityId"></param>
            <param name="picturesUrls"></param>
            <param name="actionName">Name of the post action used for editing ImageUrl.</param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.PostGalleryActionAsync``1(System.Guid,Definux.Emeraude.Admin.UI.ViewModels.Entity.Form.SelectableGalleryViewModel)">
            <summary>
            Post action used for editing ImageUrl of entity.
            </summary>
            <typeparam name="TEntityWithImage">Entity that implements <see cref="T:Definux.Emeraude.Domain.Entities.IEntityWithImage"/>.</typeparam>
            <param name="entityId"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetAllView(Definux.Emeraude.Admin.UI.ViewModels.Entity.Table.TableViewViewModel)">
            <summary>
            Build action result to table view.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.DetailsView(Definux.Emeraude.Admin.UI.ViewModels.Entity.DetailsCard.EntityDetailsViewModel)">
            <summary>
            Build action result to details view.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.CreateEditView(Definux.Emeraude.Admin.UI.ViewModels.Entity.Form.IEntityFormViewModel)">
            <summary>
            Build action result to create/edit view.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GalleryView(Definux.Emeraude.Admin.UI.ViewModels.Entity.Form.SelectableGalleryViewModel)">
            <summary>
            Build action result for gallery view.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.RedirectToAll">
            <summary>
            Redirects to table view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.RedirectToDetails(System.Guid)">
            <summary>
            Redirects to details view.
            </summary>
            <param name="entityId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.SetPartialAboveTheTable(System.String)">
            <summary>
            Set partial above the table of get all view.
            </summary>
            <param name="partialName"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.SetPartialBelowTheTable(System.String)">
            <summary>
            Set partial below the table of get all view.
            </summary>
            <param name="partialName"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Abstractions.AdminEntityController`2.GetOrderProperties">
            <summary>
            Return list of all order properties for current entity.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Controllers.Abstractions.IAdminEntityController">
            <summary>
            Informative empty interface that defines the administration entity controllers.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Controllers.Api.AdminUploadApiController">
            <summary>
            Admin upload API controller.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Api.AdminUploadApiController.File(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Action for file upload.
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Api.AdminUploadApiController.Image(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Action for image upload.
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Api.AdminUploadApiController.Video(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Action for video upload.
            </summary>
            <param name="formFile"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Controllers.Api.AdminUsersApiController">
            <summary>
            Admin users API controller.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Api.AdminUsersApiController.Fetch(System.Int32,System.String)">
            <summary>
            Fetch users for select purposes.
            </summary>
            <param name="page"></param>
            <param name="searchQuery"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Controllers.Mvc.AdminAuthenticationController">
            <summary>
            Controller for administrators authentication.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminAuthenticationController.#ctor(Definux.Emeraude.Application.Identity.IUserClaimsService,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Definux.Emeraude.Application.Identity.IUserManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Controllers.Mvc.AdminAuthenticationController"/> class.
            </summary>
            <param name="userClaimsService"></param>
            <param name="hostingEnvironment"></param>
            <param name="userManager"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminAuthenticationController.Login">
            <summary>
            Login action for GET request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminAuthenticationController.Login(Definux.Emeraude.Admin.UI.ViewModels.Account.AdminLoginViewModel)">
            <summary>
            Login action for POST request.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminAuthenticationController.LoginWith2Fa">
            <summary>
            Login with two factor authentication action for GET request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminAuthenticationController.LoginWith2Fa(Definux.Emeraude.Admin.UI.ViewModels.Account.AdminLoginWith2FaViewModel)">
            <summary>
            Login with two factor authentication action for POST request.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminAuthenticationController.Logout">
            <summary>
            Logout action.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Controllers.Mvc.AdminDashboardController">
            <summary>
            Admin dashboard controller used for index view of the administration.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminDashboardController.#ctor(Microsoft.Extensions.Options.IOptions{Definux.Emeraude.Configuration.Options.EmOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Controllers.Mvc.AdminDashboardController"/> class.
            </summary>
            <param name="optionsAccessor"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminDashboardController.Index">
            <summary>
            Index action of the controller.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Controllers.Mvc.AdminLoggingController">
            <summary>
            Admin controller that contains system settings actions.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminLoggingController.#ctor(Definux.Emeraude.Application.Identity.IUserManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Controllers.Mvc.AdminLoggingController"/> class.
            </summary>
            <param name="userManager"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminLoggingController.DeleteLog(System.String,System.Int32,System.String)">
            <summary>
            Action for delete error log.
            </summary>
            <param name="logType"></param>
            <param name="logId"></param>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminLoggingController.FetchLogs(System.String,System.Int32,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Fetch logs action.
            </summary>
            <param name="logType"></param>
            <param name="page"></param>
            <param name="searchQuery"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminLoggingController.EmailBody(System.Int32)">
            <summary>
            Returns email body from specified email log.
            </summary>
            <param name="emailLogId"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Controllers.Mvc.AdminManageController">
            <summary>
            Admin controller for management of current signed user.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminManageController.#ctor(Microsoft.AspNetCore.Identity.UserManager{Definux.Emeraude.Identity.Entities.User},System.Text.Encodings.Web.UrlEncoder,Definux.Emeraude.Application.Identity.ITwoFactorAuthenticationService,Microsoft.Extensions.Options.IOptions{Definux.Emeraude.Configuration.Options.EmOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Controllers.Mvc.AdminManageController"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="urlEncoder"></param>
            <param name="twoFactorAuthenticationService"></param>
            <param name="optionsAccessor"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminManageController.TwoFactorAuthentication">
            <summary>
            Two factor authentication action for GET request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminManageController.TwoFactorAuthentication(Definux.Emeraude.Admin.UI.ViewModels.Manage.AdminTwoFactorAuthenticationViewModel)">
            <summary>
            Two factor authentication action for POST request.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminManageController.ResetAuthenticator">
            <summary>
            Reset two factor authenticator action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminManageController.ChangePassword">
            <summary>
            Change password action for GET request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminManageController.ChangePassword(Definux.Emeraude.Admin.UI.ViewModels.Manage.AdminChangePasswordViewModel)">
            <summary>
            Change password action for POST request.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminManageController.ChangeEmailRequest">
            <summary>
            Change email action for GET request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminManageController.ChangeEmailRequest(Definux.Emeraude.Admin.UI.ViewModels.Manage.AdminChangeEmailViewModel)">
            <summary>
            Change email action for POST request.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminManageController.ChangeEmail(System.String,System.String)">
            <summary>
            Change email execution action.
            </summary>
            <param name="email"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Controllers.Mvc.AdminRootsController">
            <summary>
            Admin controller for management of files in the public and private roots.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminRootsController.#ctor(Definux.Emeraude.Application.Files.ISystemFilesService,Definux.Emeraude.Application.Files.IRootsService)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Controllers.Mvc.AdminRootsController"/> class.
            </summary>
            <param name="systemFilesService"></param>
            <param name="rootsService"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminRootsController.Root(System.String,System.String)">
            <summary>
            Root action for public and private roots.
            </summary>
            <param name="root"></param>
            <param name="folders"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminRootsController.RootFile(System.String,System.String)">
            <summary>
            Root file action for access a file from the roots.
            </summary>
            <param name="root"></param>
            <param name="folders"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminRootsController.CreateFolder(System.String,System.String)">
            <summary>
            Action for create a folder for GET request.
            </summary>
            <param name="root"></param>
            <param name="folders"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminRootsController.CreateFolder(System.String,Definux.Emeraude.Admin.UI.ViewModels.Roots.RootCreateFolderViewModel)">
            <summary>
            Action for create a folder for POST request.
            </summary>
            <param name="root"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminRootsController.UploadFiles(System.String,System.String)">
            <summary>
            Upload files action for GET request.
            </summary>
            <param name="root"></param>
            <param name="folders"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminRootsController.UploadFile(System.String,Microsoft.AspNetCore.Http.IFormFile,Definux.Emeraude.Admin.UI.ViewModels.Roots.RootUploadFilesViewModel)">
            <summary>
            Upload files action for POST request.
            </summary>
            <param name="root"></param>
            <param name="formFile"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Controllers.Mvc.AdminUsersController">
            <summary>
            Admin controller for managing application users into the system.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminUsersController.#ctor(Definux.Emeraude.Application.Identity.IUserManager,Definux.Emeraude.Application.Identity.IRoleManager,Definux.Emeraude.Application.Identity.IUserTokensService,Definux.Emeraude.Application.Identity.IUserClaimsService)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Controllers.Mvc.AdminUsersController"/> class.
            </summary>
            <param name="userManager"></param>
            <param name="roleManager"></param>
            <param name="userTokensService"></param>
            <param name="userClaimsService"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminUsersController.Roles(System.Guid)">
            <summary>
            Roles action for GET request.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminUsersController.Roles(System.Guid,Definux.Emeraude.Admin.UI.ViewModels.Users.RolesViewModel)">
            <summary>
            Roles action for POST request.
            </summary>
            <param name="userId"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminUsersController.ResetRefreshToken(System.Guid)">
            <summary>
            Reset refresh token action.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminUsersController.ImitateUser(System.Guid)">
            <summary>
            Imitate user for test purposes.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Controllers.Mvc.AdminUsersController.BuildTableViewActions">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Extensions.ApplicationBuilderExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Extensions.ApplicationBuilderExtensions.UseEmeraudeAdminSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Register Swagger middleware.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Extensions.ApplicationPartManagerExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Extensions.ApplicationPartManagerExtensions.AddAdminUIApplicationParts(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager)">
            <summary>
            Add Admin UI application parts.
            </summary>
            <param name="applicationPartManager"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Extensions.AuthorizationOptionsExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationOptions"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Extensions.AuthorizationOptionsExtensions.ApplyEmeraudeAdminAuthorizationPolicies(Microsoft.AspNetCore.Authorization.AuthorizationOptions)">
            <summary>
            Apply authorization policies to administration.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Extensions.ServiceCollectionExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Extensions.ServiceCollectionExtensions.AddEmeraudeAdmin(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register all required Emeraude administration services.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Extensions.ServiceCollectionExtensions.AddAdminCookie(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            Register Emeraude administration authentication scheme.
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Extensions.ServiceCollectionExtensions.AddAdminMapperConfiguration(AutoMapper.IMapperConfigurationExpression)">
            <summary>
            Register Emeraude administration mapping configuration.
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Extensions.ServiceCollectionExtensions.RegisterAdminEntityControllersRequests(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[])">
            <summary>
            Register Emeraude administration generic requests for all <see cref="T:Definux.Emeraude.Admin.Controllers.Abstractions.IAdminEntityController"/>.
            </summary>
            <param name="services"></param>
            <param name="assemblies"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Extensions.ServiceCollectionExtensions.RegisterAdditionalAdminGenericCustomRequests(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register additional requests used from built-in features.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Mapping.Mappers.EntityDetailsMapper">
            <summary>
            Static mapper that convert entities in the details card format.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Mapping.Mappers.EntityDetailsMapper.Map``1(``0)">
            <summary>
            Map entities to <see cref="T:Definux.Emeraude.Admin.UI.ViewModels.Entity.DetailsCard.DetailsViewModel"/> by using the decorated properties of the view model entity implementation by <seealso cref="T:Definux.Emeraude.Admin.Attributes.DetailsFieldAttribute"/>.
            </summary>
            <typeparam name="T">ViewModel entity implementation.</typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Mapping.Mappers.EntityFormMapper">
            <summary>
            Static mapper that convert entities in the form format.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Mapping.Mappers.EntityFormMapper.BuildInputs(Definux.Emeraude.Admin.UI.ViewModels.Entity.Form.IEntityFormViewModel)">
            <summary>
            Converts specified ViewModel (<see cref="T:Definux.Emeraude.Admin.UI.ViewModels.Entity.Form.IEntityFormViewModel"/>) to collection of <see cref="T:Definux.Emeraude.Admin.UI.ViewModels.Entity.Form.EntityFormViewModel"/> by using the decorated properties of the view model entity implementation by <seealso cref="T:Definux.Emeraude.Admin.Attributes.FormInputAttribute"/>.
            </summary>
            <param name="entityViewModel"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Mapping.Mappers.EntityTableMapper">
            <summary>
            Static mapper that convert entities in the table format.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Mapping.Mappers.EntityTableMapper.Map``1(Definux.Utilities.Objects.PaginatedList{``0},Definux.Emeraude.Admin.UI.ViewModels.Entity.Table.TableRowActionViewModel[])">
            <summary>
            Map entities to <see cref="T:Definux.Emeraude.Admin.UI.ViewModels.Entity.Table.TableViewModel"/> by using the decorated properties of the view model entity implementation by <seealso cref="T:Definux.Emeraude.Admin.Attributes.TableColumnAttribute"/>.
            </summary>
            <typeparam name="T">ViewModel entity implementation.</typeparam>
            <param name="entitiesResult"></param>
            <param name="actions"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Mapping.Mappers.EntityTableMapper.CreateAction(System.String,System.String,Definux.Emeraude.Admin.UI.Utilities.TableRowActionMethod,System.String,System.Object[])">
            <summary>
            Creates table view item action.
            </summary>
            <param name="title"></param>
            <param name="icon">See https://cdn.materialdesignicons.com/4.9.95/ for more information.</param>
            <param name="method"></param>
            <param name="urlStringFormat"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Mapping.Mappers.EntityTableMapper.DetailsAction(System.String,System.Object[])">
            <summary>
            Creates predefined details table view item action.
            </summary>
            <param name="urlStringFormat"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Mapping.Mappers.EntityTableMapper.EditAction(System.String,System.Object[])">
            <summary>
            Creates predefined edit table view item action.
            </summary>
            <param name="urlStringFormat"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Mapping.Mappers.EntityTableMapper.DeleteAction(System.String,System.Object[])">
            <summary>
            Creates predefined delete table view item action.
            </summary>
            <param name="urlStringFormat"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Mapping.Mappers.RootMapper">
            <summary>
            Static mapper that supports roots feature.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Mapping.Mappers.RootMapper.Map(System.String,System.Collections.Generic.IEnumerable{Definux.Emeraude.Application.Files.SystemItem})">
            <summary>
            Method that sorting a collection of <see cref="T:Definux.Emeraude.Application.Files.SystemItem"/> into a <seealso cref="T:Definux.Emeraude.Admin.UI.ViewModels.Roots.RootViewModel"/> files and folders.
            </summary>
            <param name="folderName"></param>
            <param name="fileSystemItems"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Mapping.Profiles.AdminAssemblyMappingProfile">
            <summary>
            Assembly mapping profile for registration of all mappings configurations for administration.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Mapping.Profiles.AdminAssemblyMappingProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Mapping.Profiles.AdminAssemblyMappingProfile"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Mapping.Profiles.AdminModelsProfile">
            <summary>
            Admin view models mapping profile.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Mapping.Profiles.AdminModelsProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Mapping.Profiles.AdminModelsProfile"/> class.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Models.EntitySelectModel">
            <summary>
            Entity select model used for selectable data extraction from API requests.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Models.EntitySelectModel.Id">
            <summary>
            Identifier of data item.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Models.EntitySelectModel.Text">
            <summary>
            Text visualization of data item.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Models.UserViewModel">
            <summary>
            ViewModel of the user entity.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Models.UserViewModel.Id">
            <summary>
            Identifier of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Models.UserViewModel.Email">
            <summary>
            Email address of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Models.UserViewModel.Name">
            <summary>
            Name of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Models.UserViewModel.RegistrationDate">
            <summary>
            Registration date of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Models.UserViewModel.TwoFactorEnabled">
            <summary>
            Flag that indicates whether the user is activate his/her two factor authentication.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Models.UserViewModel.IsLockedOut">
            <summary>
            Flag that indicates whether the user is locked out.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Models.UserViewModel.EmailConfirmed">
            <summary>
            Flat that indicates whether the user has been confirmed his email address.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.ApplyImage.ApplyImageCommand`1">
            <summary>
            Command for appling an image to entity with image.
            </summary>
            <typeparam name="TEntity">Target entity.</typeparam>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.ApplyImage.ApplyImageCommand`1.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.ApplyImage.ApplyImageCommand`1"/> class.
            </summary>
            <param name="entityId"></param>
            <param name="imageUrl"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.ApplyImage.ApplyImageCommand`1.EntityId">
            <summary>
            Entity id.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.ApplyImage.ApplyImageCommand`1.ImageUrl">
            <summary>
            Image URL.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.ApplyImage.ApplyImageCommandHandler`1">
            <inheritdoc cref="T:MediatR.IRequestHandler`2"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.ApplyImage.ApplyImageCommandHandler`1.#ctor(Definux.Emeraude.Application.Persistence.IEmContext,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.ApplyImage.ApplyImageCommandHandler`1"/> class.
            </summary>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.ApplyImage.ApplyImageCommandHandler`1.Handle(Definux.Emeraude.Admin.Requests.ApplyImage.ApplyImageCommand{`0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.AssignRolesToUser.AssignRolesToUserCommand">
            <summary>
            Command for assigning roles to a selected user.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.AssignRolesToUser.AssignRolesToUserCommand.#ctor(System.Guid,System.Collections.Generic.List{System.Guid})">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.AssignRolesToUser.AssignRolesToUserCommand"/> class.
            </summary>
            <param name="userId"></param>
            <param name="rolesIds"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.AssignRolesToUser.AssignRolesToUserCommand.UserId">
            <summary>
            Target user id.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.AssignRolesToUser.AssignRolesToUserCommand.RolesIds">
            <summary>
            Roles for assignment.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.AssignRolesToUser.AssignRolesToUserCommand.AssignRolesToUserCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.AssignRolesToUser.AssignRolesToUserCommand.AssignRolesToUserCommandHandler.#ctor(Definux.Emeraude.Application.Identity.IRoleManager,Definux.Emeraude.Application.Identity.IUserManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.AssignRolesToUser.AssignRolesToUserCommand.AssignRolesToUserCommandHandler"/> class.
            </summary>
            <param name="roleManager"></param>
            <param name="userManager"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.AssignRolesToUser.AssignRolesToUserCommand.AssignRolesToUserCommandHandler.Handle(Definux.Emeraude.Admin.Requests.AssignRolesToUser.AssignRolesToUserCommand,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Create.CreateCommand`2">
            <inheritdoc cref="T:Definux.Emeraude.Admin.Requests.Create.ICreateCommand`2"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Create.CreateCommand`2.#ctor(`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Create.CreateCommand`2"/> class.
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Create.CreateCommand`2.#ctor(`1,System.String,System.Nullable{System.Guid})">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Create.CreateCommand`2"/> class.
            </summary>
            <param name="model"></param>
            <param name="parentProperty"></param>
            <param name="parentId"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.Create.CreateCommand`2.Model">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Create.CreateCommandHandler`2">
            <inheritdoc cref="T:Definux.Emeraude.Admin.Requests.Create.ICreateCommandHandler`3"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Create.CreateCommandHandler`2.#ctor(Definux.Emeraude.Application.Persistence.IEmContext,AutoMapper.IMapper,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Create.CreateCommandHandler`2"/> class.
            </summary>
            <param name="context"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Create.CreateCommandHandler`2.Handle(Definux.Emeraude.Admin.Requests.Create.CreateCommand{`0,`1},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Create.ICreateCommand`2">
            <summary>
            Generic command that create an entity.
            </summary>
            <typeparam name="TEntity">Target entity.</typeparam>
            <typeparam name="TRequestModel">Data transfer object of the target entity.</typeparam>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.Create.ICreateCommand`2.Model">
            <summary>
            Request model of the command.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Create.ICreateCommandHandler`3">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteActivityLogCommand">
            <summary>
            Deletes activity log from the logger context.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteActivityLogCommand.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteActivityLogCommand"/> class.
            </summary>
            <param name="logId"></param>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteActivityLogCommand.DeleteActivityLogCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteActivityLogCommand.DeleteActivityLogCommandHandler.#ctor(Definux.Emeraude.Application.Logger.ILoggerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteActivityLogCommand.DeleteActivityLogCommandHandler"/> class.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteEmailLogCommand">
            <summary>
            Deletes email log from the logger context.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteEmailLogCommand.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteEmailLogCommand"/> class.
            </summary>
            <param name="logId"></param>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteEmailLogCommand.DeleteEmailLogCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteEmailLogCommand.DeleteEmailLogCommandHandler.#ctor(Definux.Emeraude.Application.Logger.ILoggerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteEmailLogCommand.DeleteEmailLogCommandHandler"/> class.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteErrorLogCommand">
            <summary>
            Deletes error log from the logger context.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteErrorLogCommand.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteErrorLogCommand"/> class.
            </summary>
            <param name="logId"></param>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteErrorLogCommand.DeleteErrorLogCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteErrorLogCommand.DeleteErrorLogCommandHandler.#ctor(Definux.Emeraude.Application.Logger.ILoggerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteErrorLogCommand.DeleteErrorLogCommandHandler"/> class.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteLogCommand`1">
            <summary>
            Command that delete a specified log.
            </summary>
            <typeparam name="TLoggerEntity">Logger entity type.</typeparam>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteLogCommand`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteLogCommand`1"/> class.
            </summary>
            <param name="logId"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteLogCommand`1.LogId">
            <summary>
            Id of the log.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteLogCommand`1.LogType">
            <summary>
            Type of the log.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteLogCommandHandler`2">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteLogCommandHandler`2.#ctor(Definux.Emeraude.Application.Logger.ILoggerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteLogCommandHandler`2"/> class.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteLogCommandHandler`2.Handle(`0,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteTempFileLogCommand">
            <summary>
            Deletes temp file log from the logger context.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteTempFileLogCommand.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteTempFileLogCommand"/> class.
            </summary>
            <param name="logId"></param>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteTempFileLogCommand.DeleteTempFileLogCommandHandler">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteTempFileLogCommand.DeleteTempFileLogCommandHandler.#ctor(Definux.Emeraude.Application.Logger.ILoggerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.DeleteLog.DeleteTempFileLogCommand.DeleteTempFileLogCommandHandler"/> class.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Delete.DeleteCommand`1">
            <inheritdoc cref="T:Definux.Emeraude.Admin.Requests.Delete.IDeleteCommand`1"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Delete.DeleteCommand`1.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Delete.DeleteCommand`1"/> class.
            </summary>
            <param name="entityId"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Delete.DeleteCommand`1.#ctor(System.Guid,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Delete.DeleteCommand`1"/> class.
            </summary>
            <param name="entityId"></param>
            <param name="parentExpression"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.Delete.DeleteCommand`1.EntityId">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Delete.DeleteCommandHandler`1">
            <inheritdoc cref="T:Definux.Emeraude.Admin.Requests.Delete.IDeleteCommandHandler`2"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Delete.DeleteCommandHandler`1.#ctor(Definux.Emeraude.Application.Persistence.IEmContext,AutoMapper.IMapper,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Delete.DeleteCommandHandler`1"/> class.
            </summary>
            <param name="context"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Delete.DeleteCommandHandler`1.Handle(Definux.Emeraude.Admin.Requests.Delete.DeleteCommand{`0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Delete.IDeleteCommand`1">
            <summary>
            Generic command that delete an entity.
            </summary>
            <typeparam name="TEntity">Target entity.</typeparam>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.Delete.IDeleteCommand`1.EntityId">
            <summary>
            Id of the entity.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Delete.IDeleteCommandHandler`2">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Details.DetailsQuery`2">
            <inheritdoc cref="T:Definux.Emeraude.Admin.Requests.Details.IDetailsQuery`2"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Details.DetailsQuery`2.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Details.DetailsQuery`2"/> class.
            </summary>
            <param name="entityId"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Details.DetailsQuery`2.#ctor(System.Guid,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Details.DetailsQuery`2"/> class.
            </summary>
            <param name="entityId"></param>
            <param name="parentExpression"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.Details.DetailsQuery`2.EntityId">
            <summary>
            Id of the entity.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Details.DetailsQueryHandler`2">
            <inheritdoc cref="T:Definux.Emeraude.Admin.Requests.Details.IDetailsQueryHandler`3"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Details.DetailsQueryHandler`2.#ctor(Definux.Emeraude.Application.Persistence.IEmContext,AutoMapper.IMapper,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Details.DetailsQueryHandler`2"/> class.
            </summary>
            <param name="context"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Details.DetailsQueryHandler`2.Handle(Definux.Emeraude.Admin.Requests.Details.DetailsQuery{`0,`1},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Details.IDetailsQuery`2">
            <summary>
            Generic query that returns detail information about entity.
            </summary>
            <typeparam name="TEntity">Target entity.</typeparam>
            <typeparam name="TRequestModel">Data transfer object of the target entity.</typeparam>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.Details.IDetailsQuery`2.EntityId">
            <summary>
            Id of the entity.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Details.IDetailsQueryHandler`3">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Edit.EditCommand`2">
            <inheritdoc cref="T:Definux.Emeraude.Admin.Requests.Edit.IEditCommand`2"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Edit.EditCommand`2.#ctor(System.Guid,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Edit.EditCommand`2"/> class.
            </summary>
            <param name="entityId"></param>
            <param name="model"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Edit.EditCommand`2.#ctor(System.Guid,`1,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Edit.EditCommand`2"/> class.
            </summary>
            <param name="entityId"></param>
            <param name="model"></param>
            <param name="parentExpression"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.Edit.EditCommand`2.EntityId">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.Edit.EditCommand`2.Model">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Edit.EditCommandHandler`2">
            <inheritdoc cref="T:Definux.Emeraude.Admin.Requests.Edit.IEditCommandHandler`3"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Edit.EditCommandHandler`2.#ctor(Definux.Emeraude.Application.Persistence.IEmContext,AutoMapper.IMapper,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Edit.EditCommandHandler`2"/> class.
            </summary>
            <param name="context"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Edit.EditCommandHandler`2.Handle(Definux.Emeraude.Admin.Requests.Edit.EditCommand{`0,`1},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Edit.IEditCommand`2">
            <summary>
            Generic query that edit an entity.
            </summary>
            <typeparam name="TEntity">Target entity.</typeparam>
            <typeparam name="TRequestModel">Data transfer object of the target entity.</typeparam>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.Edit.IEditCommand`2.EntityId">
            <summary>
            Id of the entity.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.Edit.IEditCommand`2.Model">
            <summary>
            Request model of the command.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Edit.IEditCommandHandler`3">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Exists.ExistsQuery`1">
            <summary>
            Get whether an entity exist or not query..
            </summary>
            <typeparam name="TEntity">Target entity.</typeparam>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Exists.ExistsQuery`1.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Exists.ExistsQuery`1"/> class.
            </summary>
            <param name="entityId"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.Exists.ExistsQuery`1.EntityId">
            <summary>
            Id of the entity.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.Exists.ExistsQueryHandler`1">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Exists.ExistsQueryHandler`1.#ctor(Definux.Emeraude.Application.Persistence.IEmContext,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.Exists.ExistsQueryHandler`1"/> class.
            </summary>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.Exists.ExistsQueryHandler`1.Handle(Definux.Emeraude.Admin.Requests.Exists.ExistsQuery{`0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchActivityLogsQuery">
            <summary>
            Fetch activity logs.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchActivityLogsQuery.FetchActivityLogsQueryHandler">
            <inheritdoc />
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.FetchLogs.FetchActivityLogsQuery.FetchActivityLogsQueryHandler.#ctor(Definux.Emeraude.Application.Logger.ILoggerContext,Definux.Emeraude.Application.Persistence.IEmContext,AutoMapper.IMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchActivityLogsQuery.FetchActivityLogsQueryHandler"/> class.
            </summary>
            <param name="loggerContext"></param>
            <param name="entityContext"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.FetchLogs.FetchActivityLogsQuery.FetchActivityLogsQueryHandler.BuildSearchQueryExpression(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchEmailLogsQuery">
            <summary>
            Fetch activity logs.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchEmailLogsQuery.FetchEmailLogsQueryHandler">
            <inheritdoc />
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.FetchLogs.FetchEmailLogsQuery.FetchEmailLogsQueryHandler.#ctor(Definux.Emeraude.Application.Logger.ILoggerContext,Definux.Emeraude.Application.Persistence.IEmContext,AutoMapper.IMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchEmailLogsQuery.FetchEmailLogsQueryHandler"/> class.
            </summary>
            <param name="loggerContext"></param>
            <param name="entityContext"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.FetchLogs.FetchEmailLogsQuery.FetchEmailLogsQueryHandler.BuildSearchQueryExpression(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchErrorLogsQuery">
            <summary>
            Fetch error logs.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchErrorLogsQuery.FetchErrorLogsQueryHandler">
            <inheritdoc />
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.FetchLogs.FetchErrorLogsQuery.FetchErrorLogsQueryHandler.#ctor(Definux.Emeraude.Application.Logger.ILoggerContext,Definux.Emeraude.Application.Persistence.IEmContext,AutoMapper.IMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchErrorLogsQuery.FetchErrorLogsQueryHandler"/> class.
            </summary>
            <param name="loggerContext"></param>
            <param name="entityContext"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.FetchLogs.FetchErrorLogsQuery.FetchErrorLogsQueryHandler.BuildSearchQueryExpression(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchLogsQuery`1">
            <summary>
            Logger query abstraction class.
            </summary>
            <typeparam name="TResult">Result of the query.</typeparam>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.FetchLogs.FetchLogsQuery`1.Page">
            <inheritdoc />
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.FetchLogs.FetchLogsQuery`1.SearchQuery">
            <inheritdoc />
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.FetchLogs.FetchLogsQuery`1.FromDate">
            <inheritdoc />
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.FetchLogs.FetchLogsQuery`1.ToDate">
            <inheritdoc />
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.FetchLogs.FetchLogsQuery`1.User">
            <inheritdoc />
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchLogsQueryHandler`4">
            <summary>
            Abstract definition for Logger query handler.
            </summary>
            <typeparam name="TRequest">Target request.</typeparam>
            <typeparam name="TResult">Request result.</typeparam>
            <typeparam name="TLoggerEntity">Target logger entity.</typeparam>
            <typeparam name="TLoggerEntityViewModel">Target logger entity view model.</typeparam>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.FetchLogs.FetchLogsQueryHandler`4.#ctor(Definux.Emeraude.Application.Logger.ILoggerContext,Definux.Emeraude.Application.Persistence.IEmContext,AutoMapper.IMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchLogsQueryHandler`4"/> class.
            </summary>
            <param name="loggerContext"></param>
            <param name="entityContext"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.FetchLogs.FetchLogsQueryHandler`4.Handle(`0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.FetchLogs.FetchLogsQueryHandler`4.BuildSearchQueryExpression(System.String)">
            <summary>
            Defines search query expression.
            </summary>
            <param name="searchQuery"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchTempFileLogsQuery">
            <summary>
            Fetch activity logs.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchTempFileLogsQuery.FetchTempFileLogsQueryHandler">
            <inheritdoc />
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.FetchLogs.FetchTempFileLogsQuery.FetchTempFileLogsQueryHandler.#ctor(Definux.Emeraude.Application.Logger.ILoggerContext,Definux.Emeraude.Application.Persistence.IEmContext,AutoMapper.IMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.FetchLogs.FetchTempFileLogsQuery.FetchTempFileLogsQueryHandler"/> class.
            </summary>
            <param name="loggerContext"></param>
            <param name="entityContext"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.FetchLogs.FetchTempFileLogsQuery.FetchTempFileLogsQueryHandler.BuildSearchQueryExpression(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.FetchLogs.IFetchLogsQuery">
            <summary>
            Fetch logs query contract.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.FetchLogs.IFetchLogsQuery.Page">
            <summary>
            Pagination page index. First index is 1.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.FetchLogs.IFetchLogsQuery.SearchQuery">
            <summary>
            Search query string.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.FetchLogs.IFetchLogsQuery.FromDate">
            <summary>
            Filters by start date.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.FetchLogs.IFetchLogsQuery.ToDate">
            <summary>
            Filters by end date.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.FetchLogs.IFetchLogsQuery.User">
            <summary>
            Filters by user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.GenericEntityRequst`1">
            <summary>
            Implementation of generic entity request.
            </summary>
            <typeparam name="TEntity">Target entity.</typeparam>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GenericEntityRequst`1.ParentExpression">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.GenericNewEntityRequest`1">
            <summary>
            Implementation of generic new entity request.
            </summary>
            <typeparam name="TEntity">Target entity.</typeparam>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GenericNewEntityRequest`1.ParentId">
            <inheritdoc />
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GenericNewEntityRequest`1.ParentProperty">
            <inheritdoc />
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.GetAll.GetAllQuery`2">
            <inheritdoc cref="T:Definux.Emeraude.Admin.Requests.GetAll.IGetAllQuery`2"/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.GetAll.GetAllQuery`2.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.GetAll.GetAllQuery`2"/> class.
            </summary>
            <param name="page"></param>
            <param name="searchQuery"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.GetAll.GetAllQuery`2.#ctor(System.Int32,System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.GetAll.GetAllQuery`2"/> class.
            </summary>
            <param name="page"></param>
            <param name="searchQuery"></param>
            <param name="parentExpression"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GetAll.GetAllQuery`2.Page">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GetAll.GetAllQuery`2.PageSize">
            <summary>
            Page size for the pagination. Default value is 25.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GetAll.GetAllQuery`2.SearchQuery">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GetAll.GetAllQuery`2.OrderBy">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GetAll.GetAllQuery`2.OrderType">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.GetAll.GetAllQueryHandler`2">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.GetAll.GetAllQueryHandler`2.#ctor(Definux.Emeraude.Application.Persistence.IEmContext,AutoMapper.IMapper,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.GetAll.GetAllQueryHandler`2"/> class.
            </summary>
            <param name="context"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.GetAll.GetAllQueryHandler`2.Handle(Definux.Emeraude.Admin.Requests.GetAll.GetAllQuery{`0,`1},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.GetAll.IGetAllQuery`2">
            <summary>
            Generic query that returns all entities with or without filter.
            </summary>
            <typeparam name="TEntity">Target entity.</typeparam>
            <typeparam name="TRequestModel">Query response model.</typeparam>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GetAll.IGetAllQuery`2.Page">
            <summary>
            Pagination page index. First index is 1.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GetAll.IGetAllQuery`2.SearchQuery">
            <summary>
            Search query string.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GetAll.IGetAllQuery`2.OrderBy">
            <summary>
            Order property.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GetAll.IGetAllQuery`2.OrderType">
            <summary>
            Order type.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.GetAll.IGetAllQueryHandler`3">
            <summary>
            Interface that wraps get all request handler.
            </summary>
            <typeparam name="TGetAllQuery">Get all query.</typeparam>
            <typeparam name="TEntity">Target entity.</typeparam>
            <typeparam name="TRequestModel">Query response model.</typeparam>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.GetEmailBody.GetEmailBodyQuery">
            <summary>
            Returns body from specified email log id.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.GetEmailBody.GetEmailBodyQuery.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.GetEmailBody.GetEmailBodyQuery"/> class.
            </summary>
            <param name="emailLogId"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GetEmailBody.GetEmailBodyQuery.EmailLogId">
            <summary>
            Id of the email log.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.GetEmailBody.GetEmailBodyQuery.GetEmailBodyQueryHandler">
            <inheritdoc />
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.GetEmailBody.GetEmailBodyQuery.GetEmailBodyQueryHandler.#ctor(Definux.Emeraude.Application.Logger.ILoggerContext,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.GetEmailBody.GetEmailBodyQuery.GetEmailBodyQueryHandler"/> class.
            </summary>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.GetEmailBody.GetEmailBodyQuery.GetEmailBodyQueryHandler.Handle(Definux.Emeraude.Admin.Requests.GetEmailBody.GetEmailBodyQuery,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.GetEntityImage.GetEntityImageQuery`1">
            <summary>
            Get image of entity.
            </summary>
            <typeparam name="TEntity">Entity of type <see cref="T:Definux.Emeraude.Domain.Entities.IEntityWithImage"/>.</typeparam>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.GetEntityImage.GetEntityImageQuery`1.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.GetEntityImage.GetEntityImageQuery`1"/> class.
            </summary>
            <param name="entityId"></param>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.GetEntityImage.GetEntityImageQuery`1.EntityId">
            <summary>
            Id of the entity.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.GetEntityImage.GetEntityImageQueryHandler`1">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.GetEntityImage.GetEntityImageQueryHandler`1.#ctor(Definux.Emeraude.Application.Persistence.IEmContext,Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Admin.Requests.GetEntityImage.GetEntityImageQueryHandler`1"/> class.
            </summary>
            <param name="context"></param>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Admin.Requests.GetEntityImage.GetEntityImageQueryHandler`1.Handle(Definux.Emeraude.Admin.Requests.GetEntityImage.GetEntityImageQuery{`0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.IDashboardRequest`1">
            <summary>
            Dashboard request contract for building dashboard view model.
            </summary>
            <typeparam name="TResponse">Response type of the request.</typeparam>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.IGenericEntityRequest`1">
            <summary>
            Definition of generic entity request.
            </summary>
            <typeparam name="TEntity">Target entity.</typeparam>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.IGenericEntityRequest`1.ParentExpression">
            <summary>
            Referenced property expression of the parent entity for current entity.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Requests.IGenericNewEntityRequest`1">
            <summary>
            Definition of generic new entity request.
            </summary>
            <typeparam name="TEntity">Target entity.</typeparam>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.IGenericNewEntityRequest`1.ParentId">
            <summary>
            Id of the parent if exists.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Admin.Requests.IGenericNewEntityRequest`1.ParentProperty">
            <summary>
            Property of the parent if exists.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.RouteConstraints.RootConstraint">
            <summary>
            Implementation of <see cref="T:Microsoft.AspNetCore.Routing.IRouteConstraint"/> for the public and private roots.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Admin.RouteConstraints.RootConstraint.RootKey">
            <summary>
            Root value property that is applied to the route parameters.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Admin.RouteConstraints.RootConstraint.RootConstraintKey">
            <summary>
            Short name of the root constraint.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Admin.RouteConstraints.RootConstraint.RootRouteSlug">
            <summary>
            Root route slug.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.RouteConstraints.RootConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Admin.Utilities.DefaultValues">
            <summary>
            Default values for the context of administration.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Admin.Utilities.DefaultValues.OrderTypes">
            <summary>
            Order types of properties.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Utilities.ExpressionBuilders">
            <summary>
            Expression builders that helps for extraction expressions from simple arguments.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Admin.Utilities.ExpressionBuilders.BuildQueryExpressionBySearchQuery``1(System.String)">
            <summary>
            Extract filter expression for entity by search string.
            </summary>
            <typeparam name="TEntity">Target entity.</typeparam>
            <param name="searchQuery"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Utilities.ExpressionBuilders.BuildLambdaExpression``1(System.String)">
            <summary>
            Build lambda expression from entityType and propertyName.
            </summary>
            <param name="propertyName"></param>
            <typeparam name="TEntity">Target entity.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Admin.Utilities.ExpressionBuilders.OrderByProperty``1(System.Linq.IQueryable{``0},System.String,Definux.Emeraude.Admin.Utilities.OrderType)">
            <summary>
            Sorts elements of a sequence in order according to the specified property name.
            </summary>
            <param name="queryable"></param>
            <param name="propertyName"></param>
            <param name="orderType"></param>
            <typeparam name="TEntity">Target entity.</typeparam>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Admin.Utilities.OrderType">
            <summary>
            Order types.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Admin.Utilities.OrderType.Unspecified">
            <summary>
            Unspecified order.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Admin.Utilities.OrderType.Ascending">
            <summary>
            Ascending order.
            </summary>
        </member>
        <member name="F:Definux.Emeraude.Admin.Utilities.OrderType.Descending">
            <summary>
            Descending order.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Admin.Utilities.MaterialDesignIcons">
            <summary>
            Material design icons for version 4.9.95. Can be accessed on https://pictogrammers.github.io/@mdi/font/4.9.95/.
            </summary>
        </member>
    </members>
</doc>
