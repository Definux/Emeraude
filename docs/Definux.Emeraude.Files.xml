<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Definux.Emeraude.Files</name>
    </assembly>
    <members>
        <member name="T:Definux.Emeraude.Files.Extensions.HostingEnvironmentExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Files.Extensions.HostingEnvironmentExtensions.GetTempUploadDirectory(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Get temp directory for upload.
            </summary>
            <param name="hostingEnvironment"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Files.Extensions.ServiceCollectionExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Files.Extensions.ServiceCollectionExtensions.RegisterEmeraudeSystemFilesManagement(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers system file management services.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Files.Services.FoldersInitializer">
            <inheritdoc cref="T:Definux.Emeraude.Application.Files.IFoldersInitializer"/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.FoldersInitializer.#ctor(Definux.Emeraude.Application.Logger.IEmLogger,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Files.Services.FoldersInitializer"/> class.
            </summary>
            <param name="logger"></param>
            <param name="hostingEnvironment"></param>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.FoldersInitializer.InitFoldersAsync">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Files.Services.RootsService">
            <inheritdoc cref="T:Definux.Emeraude.Application.Files.IRootsService"/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.RootsService.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Files.Services.RootsService"/> class.
            </summary>
            <param name="hostingEnvironment"></param>
        </member>
        <member name="P:Definux.Emeraude.Files.Services.RootsService.PublicRootDirectory">
            <inheritdoc/>
        </member>
        <member name="P:Definux.Emeraude.Files.Services.RootsService.PrivateRootDirectory">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.RootsService.GetPathFromPublicRoot(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.RootsService.GetPathFromPrivateRoot(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Files.Services.SystemFilesService">
            <inheritdoc cref="T:Definux.Emeraude.Application.Files.ISystemFilesService"/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.#ctor(Definux.Emeraude.Application.Logger.IEmLogger,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Definux.Emeraude.Application.Logger.ILoggerContext,Definux.Emeraude.Application.Files.IRootsService)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Files.Services.SystemFilesService"/> class.
            </summary>
            <param name="logger"></param>
            <param name="hostingEnvironment"></param>
            <param name="loggerContext"></param>
            <param name="rootsService"></param>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.CreateFolderAsync(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.GetFileAsync(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.GetFileByIdAsync(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.GetFileById(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.GetFilesByIds(System.Collections.Generic.IEnumerable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.GetFilesByIdsAsync(System.Collections.Generic.IEnumerable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.ScanDirectory(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.ScanPrivateDirectory">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.ScanPublicDirectory">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.ApplyTempFileToPrivateDirectoryAsync(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.ApplyTempFileToPublicDirectoryAsync(System.Int32,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.GetPublicRootFolderFilesRelativePaths(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.ApplyTempFilesToPrivateDirectoryAsync(System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.SystemFilesService.ApplyTempFilesToPublicDirectoryAsync(System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Files.Services.UploadService">
            <inheritdoc cref="T:Definux.Emeraude.Application.Files.IUploadService"/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.UploadService.#ctor(Definux.Emeraude.Application.Logger.ILoggerContext,Definux.Emeraude.Application.Logger.IEmLogger,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Definux.Emeraude.Application.Files.IRootsService)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Files.Services.UploadService"/> class.
            </summary>
            <param name="loggerContext"></param>
            <param name="logger"></param>
            <param name="hostingEnvironment"></param>
            <param name="rootsService"></param>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.UploadService.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Services.UploadService.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Files.Validation.FilesValidationProvider">
            <inheritdoc cref="T:Definux.Emeraude.Application.Files.IFilesValidationProvider"/>
        </member>
        <member name="M:Definux.Emeraude.Files.Validation.FilesValidationProvider.ValidateFormFile(Microsoft.AspNetCore.Http.IFormFile,System.Collections.Generic.List{Definux.Utilities.Enumerations.FileExtensions},System.Collections.Generic.List{System.String},System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Validation.FilesValidationProvider.ValidateFormImageFile(Microsoft.AspNetCore.Http.IFormFile,System.Collections.Generic.List{Definux.Utilities.Enumerations.FileExtensions},System.Collections.Generic.List{System.String},System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Files.Validation.FilesValidationProvider.ValidateFormVideoFile(Microsoft.AspNetCore.Http.IFormFile,System.Collections.Generic.List{Definux.Utilities.Enumerations.FileExtensions},System.Collections.Generic.List{System.String},System.Int64)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Files.Validation.Handlers.FileExtensionHandler">
            <summary>
            File validation handler for file extension.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Files.Validation.Handlers.FileExtensionHandler.#ctor(System.Collections.Generic.List{Definux.Utilities.Enumerations.FileExtensions})">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Files.Validation.Handlers.FileExtensionHandler"/> class.
            </summary>
            <param name="allowedFileExtensions"></param>
        </member>
        <member name="M:Definux.Emeraude.Files.Validation.Handlers.FileExtensionHandler.HandleProcessAction">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Files.Validation.Handlers.FileMimeTypesHandler">
            <summary>
            File validation handler for MIME types.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Files.Validation.Handlers.FileMimeTypesHandler.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Files.Validation.Handlers.FileMimeTypesHandler"/> class.
            </summary>
            <param name="allowedMimeTypes"></param>
        </member>
        <member name="M:Definux.Emeraude.Files.Validation.Handlers.FileMimeTypesHandler.HandleProcessAction">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Files.Validation.Handlers.FileSizeHandler">
            <summary>
            File validation handler for the size of the file.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Files.Validation.Handlers.FileSizeHandler.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Files.Validation.Handlers.FileSizeHandler"/> class.
            </summary>
            <param name="maxAllowedFileSize"></param>
        </member>
        <member name="M:Definux.Emeraude.Files.Validation.Handlers.FileSizeHandler.HandleProcessAction">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.Files.Validation.Handlers.ImageBoxingHandler">
            <summary>
            File validation handler that check whether a file can be cast to a image.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Files.Validation.Handlers.ImageBoxingHandler.HandleProcessAction">
            <inheritdoc/>
        </member>
    </members>
</doc>
