<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Definux.Emeraude.Interfaces</name>
    </assembly>
    <members>
        <member name="T:Definux.Emeraude.Interfaces.Requests.IChangePasswordRequest">
            <summary>
            Definition of change password request.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IChangePasswordRequest.UserId">
            <summary>
            Id of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IChangePasswordRequest.CurrentPassword">
            <summary>
            Current password of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IChangePasswordRequest.NewPassword">
            <summary>
            New password of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IChangePasswordRequest.ConfirmedPassword">
            <summary>
            Confirmed new password of the user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Interfaces.Requests.IExternalLoginRequest">
            <summary>
            Definition of external login request of Emeraude client authentication.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IExternalLoginRequest.Provider">
            <summary>
            External login provider.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IExternalLoginRequest.AccessToken">
            <summary>
            Access token of the login provider.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Interfaces.Requests.IForgotPasswordRequest">
            <summary>
            Definition of forgot password request of Emeraude client authentication.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IForgotPasswordRequest.Email">
            <summary>
            Email of the user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Interfaces.Requests.ILoginRequest">
            <summary>
            Definition of login request of Emeraude client authentication.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.ILoginRequest.Email">
            <summary>
            Email of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.ILoginRequest.Password">
            <summary>
            Password of the user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Interfaces.Requests.IRegisterRequest">
            <summary>
            Definition of register request of Emeraude client authentication.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IRegisterRequest.Name">
            <summary>
            Name of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IRegisterRequest.Email">
            <summary>
            Email of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IRegisterRequest.Password">
            <summary>
            Password of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IRegisterRequest.ConfirmedPassword">
            <summary>
            Confirmed password of the user.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Interfaces.Requests.IResetPasswordRequest">
            <summary>
            Definition of reset password request of Emeraude client authentication.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IResetPasswordRequest.Email">
            <summary>
            Email of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IResetPasswordRequest.Password">
            <summary>
            Password of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IResetPasswordRequest.ConfirmedPassword">
            <summary>
            Confirmed password of the user.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Requests.IResetPasswordRequest.Token">
            <summary>
            Verification reset password token.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Interfaces.Results.IBearerAuthenticationResult">
            <summary>
            Interface that defines the required fields for bearer authentication result.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Results.IBearerAuthenticationResult.Success">
            <summary>
            Indicates the success status of the result.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Results.IBearerAuthenticationResult.Message">
            <summary>
            Message of the result.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Results.IBearerAuthenticationResult.JsonWebToken">
            <summary>
            Json web token.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Results.IBearerAuthenticationResult.RefreshToken">
            <summary>
            Refresh token.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Interfaces.Services.IDatabaseInitializer">
            <summary>
            Definition of database initializer.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Interfaces.Services.IDatabaseInitializer.SeedAsync">
            <summary>
            Seed the data into database for the current initializer.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Interfaces.Services.ILocalizer">
            <summary>
            Definition of translation service.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Interfaces.Services.ILocalizer.Item(System.String)">
            <summary>
            Get a translation by using the current language.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Interfaces.Services.ILocalizer.TranslateKey(System.String)">
            <summary>
            Translate key by using the current language.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Interfaces.Services.ILocalizer.TranslateKeyAsync(System.String)">
            <summary>
            Translate key by using the current language (async execution).
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Interfaces.Services.ILocalizer.GetStaticContentAsync(System.String)">
            <summary>
            Get static content by using the current language (async execution).
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Interfaces.Services.ILocalizer.GetStaticContent(System.String)">
            <summary>
            Get static content by using the current language.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Interfaces.Services.ILogger">
            <summary>
            Definition of logger.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Interfaces.Services.ILogger.LogErrorAsync(System.Exception,System.String)">
            <summary>
            Save information (async execution) for thrown exception.
            </summary>
            <param name="exception"></param>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Interfaces.Services.ILogger.LogError(System.Exception,System.String)">
            <summary>
            Save information for thrown exception.
            </summary>
            <param name="exception"></param>
            <param name="method"></param>
        </member>
        <member name="M:Definux.Emeraude.Interfaces.Services.ILogger.LogErrorWithoutAnException(System.String,System.String,System.String)">
            <summary>
            Save information for specific error without existing exception.
            </summary>
            <param name="source"></param>
            <param name="message"></param>
            <param name="method"></param>
        </member>
    </members>
</doc>
