<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Definux.Emeraude</name>
    </assembly>
    <members>
        <member name="T:Definux.Emeraude.ActionFilters.RequestExceptionFilter">
            <summary>
            Filter for catching specific exceptions during request execution.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.ActionFilters.RequestExceptionFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.ActionFilters.RequestExceptionFilter"/> class.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.ActionFilters.RequestExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.ApplicationAssemblyPart">
            <summary>
            Static class that provides access to the Emeraude asembly information.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.ApplicationAssemblyPart.Assembly">
            <inheritdoc cref="T:System.Reflection.Assembly"/>
        </member>
        <member name="P:Definux.Emeraude.ApplicationAssemblyPart.AssemblyPart">
            <inheritdoc cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart"/>
        </member>
        <member name="T:Definux.Emeraude.Controllers.Api.EnumsApiController">
            <summary>
            Enumeration API controller that provide access to enumeration types and their values.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.EnumsApiController.GetEnumValueList(System.String)">
            <summary>
            Get all enumerations with their values.
            </summary>
            <param name="enumTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.EnumsApiController.GetEnumValue(System.String,System.Int32)">
            <summary>
            Get a specified enumeration by the enumeration type and value.
            </summary>
            <param name="enumTypeName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Controllers.Api.LoggerApiController">
            <summary>
            Client API logger controller.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.LoggerApiController.#ctor(Definux.Emeraude.Application.Logger.IEmLogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Controllers.Api.LoggerApiController"/> class.
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.LoggerApiController.LogClientError(Definux.Emeraude.Application.Requests.Logging.Commands.LogFrontEndError.LogFrontEndErrorCommand)">
            <summary>
            Log error to server.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Controllers.Api.UsersApiController">
            <summary>
            Client API user utilities controller.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.UsersApiController.#ctor(Definux.Emeraude.Application.Identity.ICurrentUserProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Definux.Emeraude.Controllers.Api.UsersApiController"/> class.
            </summary>
            <param name="currentUserProvider"></param>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.UsersApiController.GetCurrentUserAvatar">
            <summary>
            Gets the current user avatar file result.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.UsersApiController.GetUserAvatarType">
            <summary>
            Gets flag result that indicates whether the avatar is default or not.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.UsersApiController.ChangeUserAvatar(Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserAvatar.ChangeUserAvatarCommand)">
            <summary>
            Changes the avatar of current user.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.UsersApiController.ChangeUserPassword(Definux.Emeraude.Application.Requests.Identity.Commands.ChangePassword.ChangePasswordCommand)">
            <summary>
            Changes the password of the current user.
            </summary>
            <param name="request"></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.UsersApiController.ChangeUserName(Definux.Emeraude.Application.Requests.Identity.Commands.ChangeUserName.ChangeUserNameCommand)">
            <summary>
            Changes the name of the current user.
            </summary>
            <param name="request"></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.UsersApiController.GetCurrentUserExternalLoginProviders">
            <summary>
            Gets collection of external login providers for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.UsersApiController.RemoveCurrentUserExternalLoginProvider(Definux.Emeraude.Application.Requests.Identity.Commands.RemoveExternalLoginProvider.RemoveExternalLoginProviderCommand)">
            <summary>
            Remove specified external login provider for the current user.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.UsersApiController.RequestChangeEmailForTheCurrentUser(Definux.Emeraude.Application.Requests.Identity.Commands.RequestChangeEmail.RequestChangeEmailCommand)">
            <summary>
            Make a request for change the email for the current user.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Controllers.Api.UsersApiController.RequestResetPasswordForTheCurrentUser">
            <summary>
            Make a request for reset password for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Controllers.ErrorController">
            <summary>
            Generic error controller which is triggered by the error interceptor.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Controllers.ErrorController.Index(System.Int32,Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine)">
            <summary>
            Error index action that returns a status code result if there no defined error view or the view placed on 'Views/Client/Error/Index.cshtml'.
            </summary>
            <param name="statusCode"></param>
            <param name="compositeViewEngine"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Converters.TimeSpanConverter">
            <summary>
            Convertor for transform timespan to a JSON.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Converters.TimeSpanConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Definux.Emeraude.Converters.TimeSpanConverter.Write(System.Text.Json.Utf8JsonWriter,System.TimeSpan,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Definux.Emeraude.EmStartup">
            <summary>
            Emeraude startup base class used for initial point of the application.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.EmStartup.RunEmeraude(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            The main method of application which must be called by the Main method of the application.
            </summary>
            <param name="hostBuilder"></param>
        </member>
        <member name="T:Definux.Emeraude.Extensions.ApplicationBuilderExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Extensions.ApplicationBuilderExtensions.UseEmeraude(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,System.Boolean)">
            <summary>
            Registers and configures Emeraude required middlewares.
            </summary>
            <param name="app"></param>
            <param name="environment"></param>
            <param name="forseProduction"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Extensions.ServiceCollectionExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Extensions.ServiceCollectionExtensions.AddEmeraude``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Definux.Emeraude.Configuration.Options.EmOptions},System.Action{Definux.Seo.Options.DefinuxSeoOptions})">
            <summary>
            Configure Emeraude framework required services and functionalities.
            </summary>
            <typeparam name="TContextInterface">Interface of the application database context.</typeparam>
            <typeparam name="TContextImplementation">Implementation of the application database context.</typeparam>
            <param name="services"></param>
            <param name="optionsAction"></param>
            <param name="seoOptionsAction"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Extensions.ServiceCollectionExtensions.ApplyEmeraudeBaseOptions(Definux.Emeraude.Configuration.Options.EmOptions)">
            <summary>
            Apply Emeraude base options. In case you want to override the method check the documentation first.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Definux.Emeraude.Extensions.ServiceCollectionExtensions.ApplyAuthenticationSessionToPrivateRoot(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionBuilder"/> to use 'privateroot' as directory for session storage.
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.ModelBinders.DateTimeModelBinder`1">
            <summary>
            Customized <see cref="T:System.DateTime"/> model binder for the needs of Emeraude.
            </summary>
            <typeparam name="TDateTime">DateTime or DateTimeOffset type.</typeparam>
        </member>
        <member name="P:Definux.Emeraude.ModelBinders.DateTimeModelBinder`1.AllowNullValue">
            <summary>
            Flag that indicates whether the model can be null.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.ModelBinders.DateTimeModelBinder`1.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc/>
        </member>
        <member name="T:Definux.Emeraude.ModelBinders.DateTimeModelBinderProvider">
            <summary>
            Customized <see cref="T:System.DateTime"/> model binder provider for the needs of Emeraude.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.ModelBinders.DateTimeModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc/>
        </member>
    </members>
</doc>
