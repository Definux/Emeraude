<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Definux.Emeraude.Presentation</name>
    </assembly>
    <members>
        <member name="T:Definux.Emeraude.Presentation.Controllers.ApiController">
            <summary>
            Abstract class for creating API controllers.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.ApiController.Logger">
            <inheritdoc cref="T:Definux.Emeraude.Application.Logger.IEmLogger"/>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.ApiController.Mediator">
            <inheritdoc cref="T:MediatR.IMediator"/>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.ApiController.DisableActivityLog">
            <summary>
            Flag that activate and disable activity logging by Emeraude logger.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.ApiController.HideActivityLogParameters">
            <summary>
            Flag that hide or show the request params in activity log.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.ApiController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.ApiController.GetSuccessResponse(System.Boolean)">
            <summary>
            Get HTTP default OK or Bad request response based on the passed flag.
            </summary>
            <param name="success"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.ApiController.GetSimpleResponse(System.Boolean)">
            <summary>
            Get HTTP OK response with <see cref="T:Definux.Utilities.Objects.SimpleResult"/>.
            </summary>
            <param name="success"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Presentation.Controllers.IChildController">
            <summary>
            Definition for controller that must be tolerated as a child one for another controller.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.IChildController.ParentController">
            <summary>
            Parent controller of the current one.
            </summary>
        </member>
        <member name="T:Definux.Emeraude.Presentation.Controllers.PublicController">
            <summary>
            Abstraction for controllers which will be used on the client side of the application (not for the administration).
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.PublicController.IgnoreMaintenanceMode">
            <summary>
            Ignore <see cref="P:Definux.Emeraude.Configuration.Options.EmOptions.MaintenanceMode"/> from the Emeraude options.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.PublicController.Options">
            <inheritdoc cref="T:Definux.Emeraude.Configuration.Options.EmOptions"/>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.PublicController.Logger">
            <inheritdoc cref="T:Definux.Emeraude.Application.Logger.IEmLogger"/>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.PublicController.CurrentLanguageProvider">
            <inheritdoc cref="T:Definux.Emeraude.Application.Localization.ICurrentLanguageProvider"/>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.PublicController.CurrentUserProvider">
            <inheritdoc cref="T:Definux.Emeraude.Application.Identity.ICurrentUserProvider"/>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.PublicController.Mediator">
            <inheritdoc cref="T:MediatR.IMediator"/>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.PublicController.UserManager">
            <inheritdoc cref="T:Definux.Emeraude.Application.Identity.IUserManager"/>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.PublicController.Localizer">
            <inheritdoc cref="T:Definux.Emeraude.Application.Localization.IEmLocalizer"/>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.PublicController.DisableActivityLog">
            <summary>
            Flag that activate and disable activity logging by Emeraude logger.
            </summary>
        </member>
        <member name="P:Definux.Emeraude.Presentation.Controllers.PublicController.HideActivityLogParameters">
            <summary>
            Flag that hide or show the request params in activity log.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <inheritdoc/>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.ManageLanguageCookie">
            <summary>
            Process current language and set language cookie in the client's browser.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.GetLanguageRouteAsync(System.String)">
            <summary>
            Get route with language code (async extraction) at the beginning based on current language.
            </summary>
            <param name="route"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.GetLanguageRoute(System.String)">
            <summary>
            Get route with language code at the beginning based on current language.
            </summary>
            <param name="route"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.LanguageLocalRedirectAsync(System.String)">
            <summary>
            Redirect to local url merged with current language code (async extraction).
            </summary>
            <param name="localUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.LanguageLocalRedirect(System.String)">
            <summary>
            Redirect to local url merged with current language code.
            </summary>
            <param name="localUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.GetRouteParameterOrNull(System.String)">
            <summary>
            Get route parameter or null.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.GetInt32RouteParameterOrNull(System.String)">
            <summary>
            Get route parameter as integer or null.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.GetInt64RouteParameterOrNull(System.String)">
            <summary>
            Get route parameter as long or null.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.GetBooleanRouteParameterOrNull(System.String)">
            <summary>
            Get route parameter as boolean or null.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.GetStringRouteParameterOrNull(System.String)">
            <summary>
            Get route parameter as string or null.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.GetGuidRouteParameterOrNull(System.String)">
            <summary>
            Get route parameter as GUID or null.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Controllers.PublicController.AddTranslatedValueIntoViewData(System.String,System.String)">
            <summary>
            Add a value (translation key) into the ViewData.
            </summary>
            <param name="key"></param>
            <param name="value">Translation key.</param>
        </member>
        <member name="T:Definux.Emeraude.Presentation.Extensions.ControllerExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Controller"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Extensions.ControllerExtensions.UploadFileResponse(Microsoft.AspNetCore.Mvc.Controller,Definux.Emeraude.Application.Requests.Files.Commands.Shared.UploadResult)">
            <summary>
            Action result based on upload result.
            </summary>
            <param name="controller"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Extensions.ControllerExtensions.BadRequestWithModelErrors(Microsoft.AspNetCore.Mvc.Controller)">
            <summary>
            Bad request with model errors as response.
            </summary>
            <param name="controller"></param>
            <returns></returns>
        </member>
        <member name="T:Definux.Emeraude.Presentation.Extensions.ModelStateDictionaryExtensions">
            <summary>
            Extensions for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>.
            </summary>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Extensions.ModelStateDictionaryExtensions.ApplyValidationException(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Definux.Emeraude.Application.Exceptions.ValidationException,System.Boolean)">
            <summary>
            Apply validation exceptions to current model state.
            </summary>
            <param name="modelState"></param>
            <param name="exception"></param>
            <param name="skipTranslationKey"></param>
        </member>
        <member name="M:Definux.Emeraude.Presentation.Extensions.ModelStateDictionaryExtensions.GetValidationErrors(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Get list of validation errors.
            </summary>
            <param name="modelState"></param>
            <returns></returns>
        </member>
    </members>
</doc>
